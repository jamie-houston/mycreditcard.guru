{
  "func:admin.py.Path": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.Path",
    "name": "Path",
    "path": "pending:Path",
    "type": "function"
  },
  "func:admin.py.add": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.add",
    "name": "add",
    "path": "pending:add",
    "type": "function"
  },
  "func:admin.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:admin.py.argparse.ArgumentParser": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.argparse.ArgumentParser",
    "name": "argparse.ArgumentParser",
    "path": "pending:argparse.ArgumentParser",
    "type": "function"
  },
  "func:admin.py.cards_dir.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.cards_dir.exists",
    "name": "cards_dir.exists",
    "path": "pending:cards_dir.exists",
    "type": "function"
  },
  "func:admin.py.cards_dir.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.cards_dir.glob",
    "name": "cards_dir.glob",
    "path": "pending:cards_dir.glob",
    "type": "function"
  },
  "func:admin.py.check_deployment": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 345,
      "name": "check_deployment"
    },
    "id": "func:admin.py.check_deployment",
    "line": 345,
    "name": "check_deployment",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.collect_static": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 295,
      "name": "collect_static"
    },
    "id": "func:admin.py.collect_static",
    "line": 295,
    "name": "collect_static",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.commands.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.commands.items",
    "name": "commands.items",
    "path": "pending:commands.items",
    "type": "function"
  },
  "func:admin.py.common_workflows.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.common_workflows.items",
    "name": "common_workflows.items",
    "path": "pending:common_workflows.items",
    "type": "function"
  },
  "func:admin.py.create_superuser": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 112,
      "name": "create_superuser"
    },
    "id": "func:admin.py.create_superuser",
    "line": 112,
    "name": "create_superuser",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.data_dir.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.data_dir.exists",
    "name": "data_dir.exists",
    "path": "pending:data_dir.exists",
    "type": "function"
  },
  "func:admin.py.data_dir.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.data_dir.glob",
    "name": "data_dir.glob",
    "path": "pending:data_dir.glob",
    "type": "function"
  },
  "func:admin.py.db_file.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.db_file.exists",
    "name": "db_file.exists",
    "path": "pending:db_file.exists",
    "type": "function"
  },
  "func:admin.py.db_file.unlink": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.db_file.unlink",
    "name": "db_file.unlink",
    "path": "pending:db_file.unlink",
    "type": "function"
  },
  "func:admin.py.django.setup": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.django.setup",
    "name": "django.setup",
    "path": "pending:django.setup",
    "type": "function"
  },
  "func:admin.py.env_file.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.env_file.exists",
    "name": "env_file.exists",
    "path": "pending:env_file.exists",
    "type": "function"
  },
  "func:admin.py.execute_task": {
    "attributes": {
      "args": [
        "task",
        "args"
      ],
      "async": false,
      "line": 511,
      "name": "execute_task"
    },
    "id": "func:admin.py.execute_task",
    "line": 511,
    "name": "execute_task",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:admin.py.file_path.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.file_path.exists",
    "name": "file_path.exists",
    "path": "pending:file_path.exists",
    "type": "function"
  },
  "func:admin.py.flush_database": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 303,
      "name": "flush_database"
    },
    "id": "func:admin.py.flush_database",
    "line": 303,
    "name": "flush_database",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.full_setup": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 349,
      "name": "full_setup"
    },
    "id": "func:admin.py.full_setup",
    "line": 349,
    "name": "full_setup",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:admin.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:admin.py.hasattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.hasattr",
    "name": "hasattr",
    "path": "pending:hasattr",
    "type": "function"
  },
  "func:admin.py.import_data": {
    "attributes": {
      "args": [
        "file_path"
      ],
      "async": false,
      "line": 287,
      "name": "import_data"
    },
    "id": "func:admin.py.import_data",
    "line": 287,
    "name": "import_data",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.import_parser.add_argument": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.import_parser.add_argument",
    "name": "import_parser.add_argument",
    "path": "pending:import_parser.add_argument",
    "type": "function"
  },
  "func:admin.py.import_sample_data": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 124,
      "name": "import_sample_data"
    },
    "id": "func:admin.py.import_sample_data",
    "line": 124,
    "name": "import_sample_data",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.imported_files.add": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.imported_files.add",
    "name": "imported_files.add",
    "path": "pending:imported_files.add",
    "type": "function"
  },
  "func:admin.py.input": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.input",
    "name": "input",
    "path": "pending:input",
    "type": "function"
  },
  "func:admin.py.install_dependencies": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 53,
      "name": "install_dependencies"
    },
    "id": "func:admin.py.install_dependencies",
    "line": 53,
    "name": "install_dependencies",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:admin.py.line.startswith": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.line.startswith",
    "name": "line.startswith",
    "path": "pending:line.startswith",
    "type": "function"
  },
  "func:admin.py.line.strip": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.line.strip",
    "name": "line.strip",
    "path": "pending:line.strip",
    "type": "function"
  },
  "func:admin.py.list": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.list",
    "name": "list",
    "path": "pending:list",
    "type": "function"
  },
  "func:admin.py.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.lower",
    "name": "lower",
    "path": "pending:lower",
    "type": "function"
  },
  "func:admin.py.main": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 535,
      "name": "main"
    },
    "id": "func:admin.py.main",
    "line": 535,
    "name": "main",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.migration_file.unlink": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.migration_file.unlink",
    "name": "migration_file.unlink",
    "path": "pending:migration_file.unlink",
    "type": "function"
  },
  "func:admin.py.migrations_dir.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.migrations_dir.exists",
    "name": "migrations_dir.exists",
    "path": "pending:migrations_dir.exists",
    "type": "function"
  },
  "func:admin.py.migrations_dir.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.migrations_dir.glob",
    "name": "migrations_dir.glob",
    "path": "pending:migrations_dir.glob",
    "type": "function"
  },
  "func:admin.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:admin.py.parser.add_subparsers": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.parser.add_subparsers",
    "name": "parser.add_subparsers",
    "path": "pending:parser.add_subparsers",
    "type": "function"
  },
  "func:admin.py.parser.parse_args": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.parser.parse_args",
    "name": "parser.parse_args",
    "path": "pending:parser.parse_args",
    "type": "function"
  },
  "func:admin.py.parser.print_help": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.parser.print_help",
    "name": "parser.print_help",
    "path": "pending:parser.print_help",
    "type": "function"
  },
  "func:admin.py.print": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.print",
    "name": "print",
    "path": "pending:print",
    "type": "function"
  },
  "func:admin.py.response.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.response.lower",
    "name": "response.lower",
    "path": "pending:response.lower",
    "type": "function"
  },
  "func:admin.py.run_command": {
    "attributes": {
      "args": [
        "command",
        "description"
      ],
      "async": false,
      "line": 18,
      "name": "run_command"
    },
    "id": "func:admin.py.run_command",
    "line": 18,
    "name": "run_command",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.run_server": {
    "attributes": {
      "args": [
        "port"
      ],
      "async": false,
      "line": 120,
      "name": "run_server"
    },
    "id": "func:admin.py.run_server",
    "line": 120,
    "name": "run_server",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.run_tests": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 116,
      "name": "run_tests"
    },
    "id": "func:admin.py.run_tests",
    "line": 116,
    "name": "run_tests",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.server_parser.add_argument": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.server_parser.add_argument",
    "name": "server_parser.add_argument",
    "path": "pending:server_parser.add_argument",
    "type": "function"
  },
  "func:admin.py.set": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.set",
    "name": "set",
    "path": "pending:set",
    "type": "function"
  },
  "func:admin.py.setdefault": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.setdefault",
    "name": "setdefault",
    "path": "pending:setdefault",
    "type": "function"
  },
  "func:admin.py.setup_database": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 57,
      "name": "setup_database"
    },
    "id": "func:admin.py.setup_database",
    "line": 57,
    "name": "setup_database",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.setup_environment": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 39,
      "name": "setup_environment"
    },
    "id": "func:admin.py.setup_environment",
    "line": 39,
    "name": "setup_environment",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.setup_google_oauth": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 62,
      "name": "setup_google_oauth"
    },
    "id": "func:admin.py.setup_google_oauth",
    "line": 62,
    "name": "setup_google_oauth",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.shell": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 299,
      "name": "shell"
    },
    "id": "func:admin.py.shell",
    "line": 299,
    "name": "shell",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.show_all_commands": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 483,
      "name": "show_all_commands"
    },
    "id": "func:admin.py.show_all_commands",
    "line": 483,
    "name": "show_all_commands",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.show_interactive_menu": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 434,
      "name": "show_interactive_menu"
    },
    "id": "func:admin.py.show_interactive_menu",
    "line": 434,
    "name": "show_interactive_menu",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.show_urls": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 341,
      "name": "show_urls"
    },
    "id": "func:admin.py.show_urls",
    "line": 341,
    "name": "show_urls",
    "path": "admin.py",
    "type": "function"
  },
  "func:admin.py.social_app.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.social_app.save",
    "name": "social_app.save",
    "path": "pending:social_app.save",
    "type": "function"
  },
  "func:admin.py.sorted": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.sorted",
    "name": "sorted",
    "path": "pending:sorted",
    "type": "function"
  },
  "func:admin.py.split": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.split",
    "name": "split",
    "path": "pending:split",
    "type": "function"
  },
  "func:admin.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:admin.py.strip": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.strip",
    "name": "strip",
    "path": "pending:strip",
    "type": "function"
  },
  "func:admin.py.subparsers.add_parser": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.subparsers.add_parser",
    "name": "subparsers.add_parser",
    "path": "pending:subparsers.add_parser",
    "type": "function"
  },
  "func:admin.py.subprocess.run": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.subprocess.run",
    "name": "subprocess.run",
    "path": "pending:subprocess.run",
    "type": "function"
  },
  "func:admin.py.sys.exit": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.sys.exit",
    "name": "sys.exit",
    "path": "pending:sys.exit",
    "type": "function"
  },
  "func:admin.py.system_dir.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.system_dir.exists",
    "name": "system_dir.exists",
    "path": "pending:system_dir.exists",
    "type": "function"
  },
  "func:admin.py.system_dir.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:admin.py.system_dir.glob",
    "name": "system_dir.glob",
    "path": "pending:system_dir.glob",
    "type": "function"
  },
  "func:admin.py.wipe_database": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 311,
      "name": "wipe_database"
    },
    "id": "func:admin.py.wipe_database",
    "line": 311,
    "name": "wipe_database",
    "path": "admin.py",
    "type": "function"
  },
  "func:analyze_scenarios.py.any": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.any",
    "name": "any",
    "path": "pending:any",
    "type": "function"
  },
  "func:analyze_scenarios.py.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.append",
    "name": "append",
    "path": "pending:append",
    "type": "function"
  },
  "func:analyze_scenarios.py.cat_name.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.cat_name.replace",
    "name": "cat_name.replace",
    "path": "pending:cat_name.replace",
    "type": "function"
  },
  "func:analyze_scenarios.py.categories.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.categories.items",
    "name": "categories.items",
    "path": "pending:categories.items",
    "type": "function"
  },
  "func:analyze_scenarios.py.categories.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.categories.values",
    "name": "categories.values",
    "path": "pending:categories.values",
    "type": "function"
  },
  "func:analyze_scenarios.py.categorize_scenarios": {
    "attributes": {
      "args": [
        "scenarios_data"
      ],
      "async": false,
      "line": 15,
      "name": "categorize_scenarios"
    },
    "id": "func:analyze_scenarios.py.categorize_scenarios",
    "line": 15,
    "name": "categorize_scenarios",
    "path": "analyze_scenarios.py",
    "type": "function"
  },
  "func:analyze_scenarios.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:analyze_scenarios.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:analyze_scenarios.py.load_scenarios": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 10,
      "name": "load_scenarios"
    },
    "id": "func:analyze_scenarios.py.load_scenarios",
    "line": 10,
    "name": "load_scenarios",
    "path": "analyze_scenarios.py",
    "type": "function"
  },
  "func:analyze_scenarios.py.name.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.name.lower",
    "name": "name.lower",
    "path": "pending:name.lower",
    "type": "function"
  },
  "func:analyze_scenarios.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:analyze_scenarios.py.print": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.print",
    "name": "print",
    "path": "pending:print",
    "type": "function"
  },
  "func:analyze_scenarios.py.print_analysis": {
    "attributes": {
      "args": [
        "categories"
      ],
      "async": false,
      "line": 75,
      "name": "print_analysis"
    },
    "id": "func:analyze_scenarios.py.print_analysis",
    "line": 75,
    "name": "print_analysis",
    "path": "analyze_scenarios.py",
    "type": "function"
  },
  "func:analyze_scenarios.py.sum": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.sum",
    "name": "sum",
    "path": "pending:sum",
    "type": "function"
  },
  "func:analyze_scenarios.py.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:analyze_scenarios.py.title",
    "name": "title",
    "path": "pending:title",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.ERROR": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.ERROR",
    "name": "ERROR",
    "path": "pending:ERROR",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.SUCCESS": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.SUCCESS",
    "name": "SUCCESS",
    "path": "pending:SUCCESS",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.WARNING": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.WARNING",
    "name": "WARNING",
    "path": "pending:WARNING",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.add_arguments": {
    "attributes": {
      "args": [
        "self",
        "parser"
      ],
      "async": false,
      "line": 17,
      "name": "add_arguments"
    },
    "id": "func:cards/management/commands/import_cards.py.add_arguments",
    "line": 17,
    "name": "add_arguments",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.basename": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.basename",
    "name": "basename",
    "path": "pending:basename",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.card.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.card.save",
    "name": "card.save",
    "path": "pending:card.save",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.card_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.card_data.get",
    "name": "card_data.get",
    "path": "pending:card_data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.category.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.category.save",
    "name": "category.save",
    "path": "pending:category.save",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.category_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.category_data.get",
    "name": "category_data.get",
    "path": "pending:category_data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.count": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.count",
    "name": "count",
    "path": "pending:count",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.credit_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.credit_data.get",
    "name": "credit_data.get",
    "path": "pending:credit_data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.data.get",
    "name": "data.get",
    "path": "pending:data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.date": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.date",
    "name": "date",
    "path": "pending:date",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.datetime.strptime": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.datetime.strptime",
    "name": "datetime.strptime",
    "path": "pending:datetime.strptime",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.exclude": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.exclude",
    "name": "exclude",
    "path": "pending:exclude",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.handle": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 24,
      "name": "handle"
    },
    "id": "func:cards/management/commands/import_cards.py.handle",
    "line": 24,
    "name": "handle",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_card_credits": {
    "attributes": {
      "args": [
        "self",
        "card",
        "credits"
      ],
      "async": false,
      "line": 353,
      "name": "import_card_credits"
    },
    "id": "func:cards/management/commands/import_cards.py.import_card_credits",
    "line": 353,
    "name": "import_card_credits",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_credit_cards": {
    "attributes": {
      "args": [
        "self",
        "cards"
      ],
      "async": false,
      "line": 214,
      "name": "import_credit_cards"
    },
    "id": "func:cards/management/commands/import_cards.py.import_credit_cards",
    "line": 214,
    "name": "import_credit_cards",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_data": {
    "attributes": {
      "args": [
        "self",
        "data"
      ],
      "async": false,
      "line": 66,
      "name": "import_data"
    },
    "id": "func:cards/management/commands/import_cards.py.import_data",
    "line": 66,
    "name": "import_data",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_issuers": {
    "attributes": {
      "args": [
        "self",
        "issuers"
      ],
      "async": false,
      "line": 93,
      "name": "import_issuers"
    },
    "id": "func:cards/management/commands/import_cards.py.import_issuers",
    "line": 93,
    "name": "import_issuers",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_personal_cards": {
    "attributes": {
      "args": [
        "self",
        "data"
      ],
      "async": false,
      "line": 391,
      "name": "import_personal_cards"
    },
    "id": "func:cards/management/commands/import_cards.py.import_personal_cards",
    "line": 391,
    "name": "import_personal_cards",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_reward_categories": {
    "attributes": {
      "args": [
        "self",
        "card",
        "reward_categories"
      ],
      "async": false,
      "line": 315,
      "name": "import_reward_categories"
    },
    "id": "func:cards/management/commands/import_cards.py.import_reward_categories",
    "line": 315,
    "name": "import_reward_categories",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_reward_types": {
    "attributes": {
      "args": [
        "self",
        "reward_types"
      ],
      "async": false,
      "line": 106,
      "name": "import_reward_types"
    },
    "id": "func:cards/management/commands/import_cards.py.import_reward_types",
    "line": 106,
    "name": "import_reward_types",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.import_spending_categories": {
    "attributes": {
      "args": [
        "self",
        "categories"
      ],
      "async": false,
      "line": 117,
      "name": "import_spending_categories"
    },
    "id": "func:cards/management/commands/import_cards.py.import_spending_categories",
    "line": 117,
    "name": "import_spending_categories",
    "path": "cards/management/commands/import_cards.py",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.isinstance": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.isinstance",
    "name": "isinstance",
    "path": "pending:isinstance",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.issuer_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.issuer_data.get",
    "name": "issuer_data.get",
    "path": "pending:issuer_data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.lower",
    "name": "lower",
    "path": "pending:lower",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.parser.add_argument": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.parser.add_argument",
    "name": "parser.add_argument",
    "path": "pending:parser.add_argument",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_card_credits": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_card_credits",
    "name": "self.import_card_credits",
    "path": "pending:self.import_card_credits",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_credit_cards": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_credit_cards",
    "name": "self.import_credit_cards",
    "path": "pending:self.import_credit_cards",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_data": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_data",
    "name": "self.import_data",
    "path": "pending:self.import_data",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_issuers": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_issuers",
    "name": "self.import_issuers",
    "path": "pending:self.import_issuers",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_personal_cards": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_personal_cards",
    "name": "self.import_personal_cards",
    "path": "pending:self.import_personal_cards",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_reward_categories": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_reward_categories",
    "name": "self.import_reward_categories",
    "path": "pending:self.import_reward_categories",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_reward_types": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_reward_types",
    "name": "self.import_reward_types",
    "path": "pending:self.import_reward_types",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.self.import_spending_categories": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.self.import_spending_categories",
    "name": "self.import_spending_categories",
    "path": "pending:self.import_spending_categories",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.signup_bonus.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.signup_bonus.get",
    "name": "signup_bonus.get",
    "path": "pending:signup_bonus.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.slugify": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.slugify",
    "name": "slugify",
    "path": "pending:slugify",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.subcat_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.subcat_data.get",
    "name": "subcat_data.get",
    "path": "pending:subcat_data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.subcategory.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.subcategory.save",
    "name": "subcategory.save",
    "path": "pending:subcategory.save",
    "type": "function"
  },
  "func:cards/management/commands/import_cards.py.write": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_cards.py.write",
    "name": "write",
    "path": "pending:write",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.ERROR": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.ERROR",
    "name": "ERROR",
    "path": "pending:ERROR",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.SUCCESS": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.SUCCESS",
    "name": "SUCCESS",
    "path": "pending:SUCCESS",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.WARNING": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.WARNING",
    "name": "WARNING",
    "path": "pending:WARNING",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.all_credits.add": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.all_credits.add",
    "name": "all_credits.add",
    "path": "pending:all_credits.add",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.any": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.any",
    "name": "any",
    "path": "pending:any",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.basename": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.basename",
    "name": "basename",
    "path": "pending:basename",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.card.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.card.get",
    "name": "card.get",
    "path": "pending:card.get",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.categorize_credit": {
    "attributes": {
      "args": [
        "self",
        "credit_name"
      ],
      "async": false,
      "line": 152,
      "name": "categorize_credit"
    },
    "id": "func:cards/management/commands/import_credit_types.py.categorize_credit",
    "line": 152,
    "name": "categorize_credit",
    "path": "cards/management/commands/import_credit_types.py",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.category_icons.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.category_icons.get",
    "name": "category_icons.get",
    "path": "pending:category_icons.get",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.credit.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.credit.get",
    "name": "credit.get",
    "path": "pending:credit.get",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.credit_name.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.credit_name.lower",
    "name": "credit_name.lower",
    "path": "pending:credit_name.lower",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.credit_type.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.credit_type.save",
    "name": "credit_type.save",
    "path": "pending:credit_type.save",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.description.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.description.lower",
    "name": "description.lower",
    "path": "pending:description.lower",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.description.strip": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.description.strip",
    "name": "description.strip",
    "path": "pending:description.strip",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.get_credit_icon": {
    "attributes": {
      "args": [
        "self",
        "category",
        "credit_name"
      ],
      "async": false,
      "line": 171,
      "name": "get_credit_icon"
    },
    "id": "func:cards/management/commands/import_credit_types.py.get_credit_icon",
    "line": 171,
    "name": "get_credit_icon",
    "path": "cards/management/commands/import_credit_types.py",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.get_sort_order": {
    "attributes": {
      "args": [
        "self",
        "category"
      ],
      "async": false,
      "line": 214,
      "name": "get_sort_order"
    },
    "id": "func:cards/management/commands/import_credit_types.py.get_sort_order",
    "line": 214,
    "name": "get_sort_order",
    "path": "cards/management/commands/import_credit_types.py",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.glob.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.glob.glob",
    "name": "glob.glob",
    "path": "pending:glob.glob",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.handle": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 12,
      "name": "handle"
    },
    "id": "func:cards/management/commands/import_credit_types.py.handle",
    "line": 12,
    "name": "handle",
    "path": "cards/management/commands/import_credit_types.py",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.normalize_credit_description": {
    "attributes": {
      "args": [
        "self",
        "description"
      ],
      "async": false,
      "line": 101,
      "name": "normalize_credit_description"
    },
    "id": "func:cards/management/commands/import_credit_types.py.normalize_credit_description",
    "line": 101,
    "name": "normalize_credit_description",
    "path": "cards/management/commands/import_credit_types.py",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.self.categorize_credit": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.self.categorize_credit",
    "name": "self.categorize_credit",
    "path": "pending:self.categorize_credit",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.self.get_credit_icon": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.self.get_credit_icon",
    "name": "self.get_credit_icon",
    "path": "pending:self.get_credit_icon",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.self.get_sort_order": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.self.get_sort_order",
    "name": "self.get_sort_order",
    "path": "pending:self.get_sort_order",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.self.normalize_credit_description": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.self.normalize_credit_description",
    "name": "self.normalize_credit_description",
    "path": "pending:self.normalize_credit_description",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.set": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.set",
    "name": "set",
    "path": "pending:set",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.slugify": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.slugify",
    "name": "slugify",
    "path": "pending:slugify",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.sort_orders.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.sort_orders.get",
    "name": "sort_orders.get",
    "path": "pending:sort_orders.get",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.sorted": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.sorted",
    "name": "sorted",
    "path": "pending:sorted",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.strip": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.strip",
    "name": "strip",
    "path": "pending:strip",
    "type": "function"
  },
  "func:cards/management/commands/import_credit_types.py.write": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_credit_types.py.write",
    "name": "write",
    "path": "pending:write",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.ERROR": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.ERROR",
    "name": "ERROR",
    "path": "pending:ERROR",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.SUCCESS": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.SUCCESS",
    "name": "SUCCESS",
    "path": "pending:SUCCESS",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.WARNING": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.WARNING",
    "name": "WARNING",
    "path": "pending:WARNING",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.add_arguments": {
    "attributes": {
      "args": [
        "self",
        "parser"
      ],
      "async": false,
      "line": 11,
      "name": "add_arguments"
    },
    "id": "func:cards/management/commands/import_spending_credits.py.add_arguments",
    "line": 11,
    "name": "add_arguments",
    "path": "cards/management/commands/import_spending_credits.py",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.credit.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.credit.save",
    "name": "credit.save",
    "path": "pending:credit.save",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.credit_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.credit_data.get",
    "name": "credit_data.get",
    "path": "pending:credit_data.get",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.handle": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 24,
      "name": "handle"
    },
    "id": "func:cards/management/commands/import_spending_credits.py.handle",
    "line": 24,
    "name": "handle",
    "path": "cards/management/commands/import_spending_credits.py",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.parser.add_argument": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.parser.add_argument",
    "name": "parser.add_argument",
    "path": "pending:parser.add_argument",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.slugify": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.slugify",
    "name": "slugify",
    "path": "pending:slugify",
    "type": "function"
  },
  "func:cards/management/commands/import_spending_credits.py.write": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/import_spending_credits.py.write",
    "name": "write",
    "path": "pending:write",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.CommandError": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.CommandError",
    "name": "CommandError",
    "path": "pending:CommandError",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.Decimal": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.Decimal",
    "name": "Decimal",
    "path": "pending:Decimal",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.ERROR": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.ERROR",
    "name": "ERROR",
    "path": "pending:ERROR",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.HTTP_INFO": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.HTTP_INFO",
    "name": "HTTP_INFO",
    "path": "pending:HTTP_INFO",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.RecommendationEngine": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.RecommendationEngine",
    "name": "RecommendationEngine",
    "path": "pending:RecommendationEngine",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.SUCCESS": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.SUCCESS",
    "name": "SUCCESS",
    "path": "pending:SUCCESS",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.ScenarioLoader.load_scenarios": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.ScenarioLoader.load_scenarios",
    "name": "ScenarioLoader.load_scenarios",
    "path": "pending:ScenarioLoader.load_scenarios",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.ValueError": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.ValueError",
    "name": "ValueError",
    "path": "pending:ValueError",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.WARNING": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.WARNING",
    "name": "WARNING",
    "path": "pending:WARNING",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.abs": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.abs",
    "name": "abs",
    "path": "pending:abs",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.action_style": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.action_style",
    "name": "action_style",
    "path": "pending:action_style",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.add_arguments": {
    "attributes": {
      "args": [
        "self",
        "parser"
      ],
      "async": false,
      "line": 29,
      "name": "add_arguments"
    },
    "id": "func:cards/management/commands/run_scenario.py.add_arguments",
    "line": 29,
    "name": "add_arguments",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.any": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.any",
    "name": "any",
    "path": "pending:any",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.card_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.card_data.get",
    "name": "card_data.get",
    "path": "pending:card_data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.cat_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.cat_data.get",
    "name": "cat_data.get",
    "path": "pending:cat_data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.category.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.category.title",
    "name": "category.title",
    "path": "pending:category.title",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.category_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.category_data.get",
    "name": "category_data.get",
    "path": "pending:category_data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.category_mapping.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.category_mapping.get",
    "name": "category_mapping.get",
    "path": "pending:category_mapping.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.create_credit_card": {
    "attributes": {
      "args": [
        "self",
        "card_data"
      ],
      "async": false,
      "line": 607,
      "name": "create_credit_card"
    },
    "id": "func:cards/management/commands/run_scenario.py.create_credit_card",
    "line": 607,
    "name": "create_credit_card",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.create_credit_card_from_name": {
    "attributes": {
      "args": [
        "self",
        "card_name"
      ],
      "async": false,
      "line": 573,
      "name": "create_credit_card_from_name"
    },
    "id": "func:cards/management/commands/run_scenario.py.create_credit_card_from_name",
    "line": 573,
    "name": "create_credit_card_from_name",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.create_credit_card_from_slug": {
    "attributes": {
      "args": [
        "self",
        "card_slug"
      ],
      "async": false,
      "line": 539,
      "name": "create_credit_card_from_slug"
    },
    "id": "func:cards/management/commands/run_scenario.py.create_credit_card_from_slug",
    "line": 539,
    "name": "create_credit_card_from_slug",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.create_test_scenario": {
    "attributes": {
      "args": [
        "self",
        "scenario_data"
      ],
      "async": false,
      "line": 483,
      "name": "create_test_scenario"
    },
    "id": "func:cards/management/commands/run_scenario.py.create_test_scenario",
    "line": 483,
    "name": "create_test_scenario",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.create_test_setup_data": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 633,
      "name": "create_test_setup_data"
    },
    "id": "func:cards/management/commands/run_scenario.py.create_test_setup_data",
    "line": 633,
    "name": "create_test_setup_data",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.create_user": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.create_user",
    "name": "create_user",
    "path": "pending:create_user",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.data.get",
    "name": "data.get",
    "path": "pending:data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.date.today": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.date.today",
    "name": "date.today",
    "path": "pending:date.today",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.dirname": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.dirname",
    "name": "dirname",
    "path": "pending:dirname",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.display_results": {
    "attributes": {
      "args": [
        "self",
        "scenario_data",
        "recommendations",
        "verbose"
      ],
      "async": false,
      "line": 166,
      "name": "display_results"
    },
    "id": "func:cards/management/commands/run_scenario.py.display_results",
    "line": 166,
    "name": "display_results",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.engine.generate_quick_recommendations": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.engine.generate_quick_recommendations",
    "name": "engine.generate_quick_recommendations",
    "path": "pending:engine.generate_quick_recommendations",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.enumerate": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.enumerate",
    "name": "enumerate",
    "path": "pending:enumerate",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.existing_user.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.existing_user.delete",
    "name": "existing_user.delete",
    "path": "pending:existing_user.delete",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.expected.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.expected.get",
    "name": "expected.get",
    "path": "pending:expected.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.float": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.float",
    "name": "float",
    "path": "pending:float",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.handle": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 58,
      "name": "handle"
    },
    "id": "func:cards/management/commands/run_scenario.py.handle",
    "line": 58,
    "name": "handle",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.hasattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.hasattr",
    "name": "hasattr",
    "path": "pending:hasattr",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.issuer_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.issuer_data.get",
    "name": "issuer_data.get",
    "path": "pending:issuer_data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.issues.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.issues.append",
    "name": "issues.append",
    "path": "pending:issues.append",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.issues.extend": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.issues.extend",
    "name": "issues.extend",
    "path": "pending:issues.extend",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.item.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.item.get",
    "name": "item.get",
    "path": "pending:item.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.items",
    "name": "items",
    "path": "pending:items",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.join": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.join",
    "name": "join",
    "path": "pending:join",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.list_scenarios": {
    "attributes": {
      "args": [
        "self",
        "scenarios"
      ],
      "async": false,
      "line": 94,
      "name": "list_scenarios"
    },
    "id": "func:cards/management/commands/run_scenario.py.list_scenarios",
    "line": 94,
    "name": "list_scenarios",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.lower",
    "name": "lower",
    "path": "pending:lower",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.parser.add_argument": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.parser.add_argument",
    "name": "parser.add_argument",
    "path": "pending:parser.add_argument",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.primary_categories.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.primary_categories.append",
    "name": "primary_categories.append",
    "path": "pending:primary_categories.append",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.rec.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.rec.get",
    "name": "rec.get",
    "path": "pending:rec.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.recommended_categories.add": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.recommended_categories.add",
    "name": "recommended_categories.add",
    "path": "pending:recommended_categories.add",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.replace",
    "name": "replace",
    "path": "pending:replace",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.rt_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.rt_data.get",
    "name": "rt_data.get",
    "path": "pending:rt_data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.run_all_scenarios": {
    "attributes": {
      "args": [
        "self",
        "scenarios",
        "verbose"
      ],
      "async": false,
      "line": 115,
      "name": "run_all_scenarios"
    },
    "id": "func:cards/management/commands/run_scenario.py.run_all_scenarios",
    "line": 115,
    "name": "run_all_scenarios",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.run_scenario": {
    "attributes": {
      "args": [
        "self",
        "scenario_data",
        "verbose"
      ],
      "async": false,
      "line": 138,
      "name": "run_scenario"
    },
    "id": "func:cards/management/commands/run_scenario.py.run_scenario",
    "line": 138,
    "name": "run_scenario",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.run_single_scenario": {
    "attributes": {
      "args": [
        "self",
        "scenarios",
        "scenario_name",
        "verbose"
      ],
      "async": false,
      "line": 124,
      "name": "run_single_scenario"
    },
    "id": "func:cards/management/commands/run_scenario.py.run_single_scenario",
    "line": 124,
    "name": "run_single_scenario",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.scenario.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.scenario.get",
    "name": "scenario.get",
    "path": "pending:scenario.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.scenario_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.scenario_data.get",
    "name": "scenario_data.get",
    "path": "pending:scenario_data.get",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.create_credit_card": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.create_credit_card",
    "name": "self.create_credit_card",
    "path": "pending:self.create_credit_card",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.create_credit_card_from_slug": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.create_credit_card_from_slug",
    "name": "self.create_credit_card_from_slug",
    "path": "pending:self.create_credit_card_from_slug",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.create_test_scenario": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.create_test_scenario",
    "name": "self.create_test_scenario",
    "path": "pending:self.create_test_scenario",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.create_test_setup_data": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.create_test_setup_data",
    "name": "self.create_test_setup_data",
    "path": "pending:self.create_test_setup_data",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.display_results": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.display_results",
    "name": "self.display_results",
    "path": "pending:self.display_results",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.list_scenarios": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.list_scenarios",
    "name": "self.list_scenarios",
    "path": "pending:self.list_scenarios",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.run_all_scenarios": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.run_all_scenarios",
    "name": "self.run_all_scenarios",
    "path": "pending:self.run_all_scenarios",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.run_scenario": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.run_scenario",
    "name": "self.run_scenario",
    "path": "pending:self.run_scenario",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.run_single_scenario": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.run_single_scenario",
    "name": "self.run_single_scenario",
    "path": "pending:self.run_single_scenario",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.setup_test_data": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.setup_test_data",
    "name": "self.setup_test_data",
    "path": "pending:self.setup_test_data",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.validate_breakdown_accuracy": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.validate_breakdown_accuracy",
    "name": "self.validate_breakdown_accuracy",
    "path": "pending:self.validate_breakdown_accuracy",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.validate_card_count_optimization": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.validate_card_count_optimization",
    "name": "self.validate_card_count_optimization",
    "path": "pending:self.validate_card_count_optimization",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.validate_expectations": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.validate_expectations",
    "name": "self.validate_expectations",
    "path": "pending:self.validate_expectations",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.validate_portfolio_optimization": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.validate_portfolio_optimization",
    "name": "self.validate_portfolio_optimization",
    "path": "pending:self.validate_portfolio_optimization",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.self.validate_zero_fee_optimization": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.self.validate_zero_fee_optimization",
    "name": "self.validate_zero_fee_optimization",
    "path": "pending:self.validate_zero_fee_optimization",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.set": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.set",
    "name": "set",
    "path": "pending:set",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.setup_test_data": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 451,
      "name": "setup_test_data"
    },
    "id": "func:cards/management/commands/run_scenario.py.setup_test_data",
    "line": 451,
    "name": "setup_test_data",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.spending.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.spending.items",
    "name": "spending.items",
    "path": "pending:spending.items",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.spending.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.spending.values",
    "name": "spending.values",
    "path": "pending:spending.values",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.sum": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.sum",
    "name": "sum",
    "path": "pending:sum",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.timedelta": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.timedelta",
    "name": "timedelta",
    "path": "pending:timedelta",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.upper": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.upper",
    "name": "upper",
    "path": "pending:upper",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.validate_breakdown_accuracy": {
    "attributes": {
      "args": [
        "self",
        "recommendations"
      ],
      "async": false,
      "line": 310,
      "name": "validate_breakdown_accuracy"
    },
    "id": "func:cards/management/commands/run_scenario.py.validate_breakdown_accuracy",
    "line": 310,
    "name": "validate_breakdown_accuracy",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.validate_card_count_optimization": {
    "attributes": {
      "args": [
        "self",
        "recommendations",
        "expected"
      ],
      "async": false,
      "line": 273,
      "name": "validate_card_count_optimization"
    },
    "id": "func:cards/management/commands/run_scenario.py.validate_card_count_optimization",
    "line": 273,
    "name": "validate_card_count_optimization",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.validate_expectations": {
    "attributes": {
      "args": [
        "self",
        "recommendations",
        "expected",
        "scenario_name"
      ],
      "async": false,
      "line": 211,
      "name": "validate_expectations"
    },
    "id": "func:cards/management/commands/run_scenario.py.validate_expectations",
    "line": 211,
    "name": "validate_expectations",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.validate_portfolio_optimization": {
    "attributes": {
      "args": [
        "self",
        "recommendations",
        "expected"
      ],
      "async": false,
      "line": 355,
      "name": "validate_portfolio_optimization"
    },
    "id": "func:cards/management/commands/run_scenario.py.validate_portfolio_optimization",
    "line": 355,
    "name": "validate_portfolio_optimization",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.validate_zero_fee_optimization": {
    "attributes": {
      "args": [
        "self",
        "recommendations",
        "expected"
      ],
      "async": false,
      "line": 294,
      "name": "validate_zero_fee_optimization"
    },
    "id": "func:cards/management/commands/run_scenario.py.validate_zero_fee_optimization",
    "line": 294,
    "name": "validate_zero_fee_optimization",
    "path": "cards/management/commands/run_scenario.py",
    "type": "function"
  },
  "func:cards/management/commands/run_scenario.py.write": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/management/commands/run_scenario.py.write",
    "name": "write",
    "path": "pending:write",
    "type": "function"
  },
  "func:cards/models.py.__str__": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 291,
      "name": "__str__"
    },
    "id": "func:cards/models.py.__str__",
    "line": 291,
    "name": "__str__",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.annual_value": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 172,
      "name": "annual_value"
    },
    "id": "func:cards/models.py.annual_value",
    "line": 172,
    "name": "annual_value",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.apply_url": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 100,
      "name": "apply_url"
    },
    "id": "func:cards/models.py.apply_url",
    "line": 100,
    "name": "apply_url",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.display_name": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 264,
      "name": "display_name"
    },
    "id": "func:cards/models.py.display_name",
    "line": 264,
    "name": "display_name",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:cards/models.py.float": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.float",
    "name": "float",
    "path": "pending:float",
    "type": "function"
  },
  "func:cards/models.py.generate_share_uuid": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 200,
      "name": "generate_share_uuid"
    },
    "id": "func:cards/models.py.generate_share_uuid",
    "line": 200,
    "name": "generate_share_uuid",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:cards/models.py.is_active": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 259,
      "name": "is_active"
    },
    "id": "func:cards/models.py.is_active",
    "line": 259,
    "name": "is_active",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.is_parent_category": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 43,
      "name": "is_parent_category"
    },
    "id": "func:cards/models.py.is_parent_category",
    "line": 43,
    "name": "is_parent_category",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.is_public": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 217,
      "name": "is_public"
    },
    "id": "func:cards/models.py.is_public",
    "line": 217,
    "name": "is_public",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.is_subcategory": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 48,
      "name": "is_subcategory"
    },
    "id": "func:cards/models.py.is_subcategory",
    "line": 48,
    "name": "is_subcategory",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.isinstance": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.isinstance",
    "name": "isinstance",
    "path": "pending:isinstance",
    "type": "function"
  },
  "func:cards/models.py.referral_url": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 85,
      "name": "referral_url"
    },
    "id": "func:cards/models.py.referral_url",
    "line": 85,
    "name": "referral_url",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.reverse": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.reverse",
    "name": "reverse",
    "path": "pending:reverse",
    "type": "function"
  },
  "func:cards/models.py.self.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.self.save",
    "name": "self.save",
    "path": "pending:self.save",
    "type": "function"
  },
  "func:cards/models.py.shareable_url": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 209,
      "name": "shareable_url"
    },
    "id": "func:cards/models.py.shareable_url",
    "line": 209,
    "name": "shareable_url",
    "path": "cards/models.py",
    "type": "function"
  },
  "func:cards/models.py.signup_bonus.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.signup_bonus.get",
    "name": "signup_bonus.get",
    "path": "pending:signup_bonus.get",
    "type": "function"
  },
  "func:cards/models.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:cards/models.py.uuid.uuid4": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/models.py.uuid.uuid4",
    "name": "uuid.uuid4",
    "path": "pending:uuid.uuid4",
    "type": "function"
  },
  "func:cards/scenario_loader.py.FileNotFoundError": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.FileNotFoundError",
    "name": "FileNotFoundError",
    "path": "pending:FileNotFoundError",
    "type": "function"
  },
  "func:cards/scenario_loader.py.ScenarioLoader.load_from_directory": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.ScenarioLoader.load_from_directory",
    "name": "ScenarioLoader.load_from_directory",
    "path": "pending:ScenarioLoader.load_from_directory",
    "type": "function"
  },
  "func:cards/scenario_loader.py.ScenarioLoader.load_scenarios": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.ScenarioLoader.load_scenarios",
    "name": "ScenarioLoader.load_scenarios",
    "path": "pending:ScenarioLoader.load_scenarios",
    "type": "function"
  },
  "func:cards/scenario_loader.py.ScenarioLoader.load_single_file": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.ScenarioLoader.load_single_file",
    "name": "ScenarioLoader.load_single_file",
    "path": "pending:ScenarioLoader.load_single_file",
    "type": "function"
  },
  "func:cards/scenario_loader.py.ValueError": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.ValueError",
    "name": "ValueError",
    "path": "pending:ValueError",
    "type": "function"
  },
  "func:cards/scenario_loader.py.all_scenarios.extend": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.all_scenarios.extend",
    "name": "all_scenarios.extend",
    "path": "pending:all_scenarios.extend",
    "type": "function"
  },
  "func:cards/scenario_loader.py.basename": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.basename",
    "name": "basename",
    "path": "pending:basename",
    "type": "function"
  },
  "func:cards/scenario_loader.py.data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.data.get",
    "name": "data.get",
    "path": "pending:data.get",
    "type": "function"
  },
  "func:cards/scenario_loader.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:cards/scenario_loader.py.f.endswith": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.f.endswith",
    "name": "f.endswith",
    "path": "pending:f.endswith",
    "type": "function"
  },
  "func:cards/scenario_loader.py.file_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.file_data.get",
    "name": "file_data.get",
    "path": "pending:file_data.get",
    "type": "function"
  },
  "func:cards/scenario_loader.py.get_scenario_by_name": {
    "attributes": {
      "args": [
        "scenarios_data",
        "name"
      ],
      "async": false,
      "line": 115,
      "name": "get_scenario_by_name"
    },
    "id": "func:cards/scenario_loader.py.get_scenario_by_name",
    "line": 115,
    "name": "get_scenario_by_name",
    "path": "cards/scenario_loader.py",
    "type": "function"
  },
  "func:cards/scenario_loader.py.get_scenarios_path": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 134,
      "name": "get_scenarios_path"
    },
    "id": "func:cards/scenario_loader.py.get_scenarios_path",
    "line": 134,
    "name": "get_scenarios_path",
    "path": "cards/scenario_loader.py",
    "type": "function"
  },
  "func:cards/scenario_loader.py.glob.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.glob.glob",
    "name": "glob.glob",
    "path": "pending:glob.glob",
    "type": "function"
  },
  "func:cards/scenario_loader.py.isdir": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.isdir",
    "name": "isdir",
    "path": "pending:isdir",
    "type": "function"
  },
  "func:cards/scenario_loader.py.isfile": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.isfile",
    "name": "isfile",
    "path": "pending:isfile",
    "type": "function"
  },
  "func:cards/scenario_loader.py.join": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.join",
    "name": "join",
    "path": "pending:join",
    "type": "function"
  },
  "func:cards/scenario_loader.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:cards/scenario_loader.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:cards/scenario_loader.py.list_scenario_names": {
    "attributes": {
      "args": [
        "scenarios_data"
      ],
      "async": false,
      "line": 123,
      "name": "list_scenario_names"
    },
    "id": "func:cards/scenario_loader.py.list_scenario_names",
    "line": 123,
    "name": "list_scenario_names",
    "path": "cards/scenario_loader.py",
    "type": "function"
  },
  "func:cards/scenario_loader.py.load_from_directory": {
    "attributes": {
      "args": [
        "directory_path"
      ],
      "async": false,
      "line": 24,
      "name": "load_from_directory"
    },
    "id": "func:cards/scenario_loader.py.load_from_directory",
    "line": 24,
    "name": "load_from_directory",
    "path": "cards/scenario_loader.py",
    "type": "function"
  },
  "func:cards/scenario_loader.py.load_scenarios": {
    "attributes": {
      "args": [
        "path"
      ],
      "async": false,
      "line": 68,
      "name": "load_scenarios"
    },
    "id": "func:cards/scenario_loader.py.load_scenarios",
    "line": 68,
    "name": "load_scenarios",
    "path": "cards/scenario_loader.py",
    "type": "function"
  },
  "func:cards/scenario_loader.py.load_single_file": {
    "attributes": {
      "args": [
        "file_path"
      ],
      "async": false,
      "line": 15,
      "name": "load_single_file"
    },
    "id": "func:cards/scenario_loader.py.load_single_file",
    "line": 15,
    "name": "load_single_file",
    "path": "cards/scenario_loader.py",
    "type": "function"
  },
  "func:cards/scenario_loader.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:cards/scenario_loader.py.scenario.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.scenario.get",
    "name": "scenario.get",
    "path": "pending:scenario.get",
    "type": "function"
  },
  "func:cards/scenario_loader.py.scenarios_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.scenarios_data.get",
    "name": "scenarios_data.get",
    "path": "pending:scenarios_data.get",
    "type": "function"
  },
  "func:cards/scenario_loader.py.sorted": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/scenario_loader.py.sorted",
    "name": "sorted",
    "path": "pending:sorted",
    "type": "function"
  },
  "func:cards/serializers.py.SpendingCategorySerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.SpendingCategorySerializer",
    "name": "SpendingCategorySerializer",
    "path": "pending:SpendingCategorySerializer",
    "type": "function"
  },
  "func:cards/serializers.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:cards/serializers.py.category_data.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.category_data.items",
    "name": "category_data.items",
    "path": "pending:category_data.items",
    "type": "function"
  },
  "func:cards/serializers.py.create": {
    "attributes": {
      "args": [
        "self",
        "validated_data"
      ],
      "async": false,
      "line": 154,
      "name": "create"
    },
    "id": "func:cards/serializers.py.create",
    "line": 154,
    "name": "create",
    "path": "cards/serializers.py",
    "type": "function"
  },
  "func:cards/serializers.py.data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.data.get",
    "name": "data.get",
    "path": "pending:data.get",
    "type": "function"
  },
  "func:cards/serializers.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:cards/serializers.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:cards/serializers.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:cards/serializers.py.get_parent": {
    "attributes": {
      "args": [
        "self",
        "obj"
      ],
      "async": false,
      "line": 34,
      "name": "get_parent"
    },
    "id": "func:cards/serializers.py.get_parent",
    "line": 34,
    "name": "get_parent",
    "path": "cards/serializers.py",
    "type": "function"
  },
  "func:cards/serializers.py.get_subcategories": {
    "attributes": {
      "args": [
        "self",
        "obj"
      ],
      "async": false,
      "line": 29,
      "name": "get_subcategories"
    },
    "id": "func:cards/serializers.py.get_subcategories",
    "line": 29,
    "name": "get_subcategories",
    "path": "cards/serializers.py",
    "type": "function"
  },
  "func:cards/serializers.py.int": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.int",
    "name": "int",
    "path": "pending:int",
    "type": "function"
  },
  "func:cards/serializers.py.serializers.ValidationError": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/serializers.py.serializers.ValidationError",
    "name": "serializers.ValidationError",
    "path": "pending:serializers.ValidationError",
    "type": "function"
  },
  "func:cards/serializers.py.validate": {
    "attributes": {
      "args": [
        "self",
        "data"
      ],
      "async": false,
      "line": 199,
      "name": "validate"
    },
    "id": "func:cards/serializers.py.validate",
    "line": 199,
    "name": "validate",
    "path": "cards/serializers.py",
    "type": "function"
  },
  "func:cards/views.py.CreateSpendingProfileSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.CreateSpendingProfileSerializer",
    "name": "CreateSpendingProfileSerializer",
    "path": "pending:CreateSpendingProfileSerializer",
    "type": "function"
  },
  "func:cards/views.py.CreditCardListSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.CreditCardListSerializer",
    "name": "CreditCardListSerializer",
    "path": "pending:CreditCardListSerializer",
    "type": "function"
  },
  "func:cards/views.py.GenerateRoadmapSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.GenerateRoadmapSerializer",
    "name": "GenerateRoadmapSerializer",
    "path": "pending:GenerateRoadmapSerializer",
    "type": "function"
  },
  "func:cards/views.py.Http404": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.Http404",
    "name": "Http404",
    "path": "pending:Http404",
    "type": "function"
  },
  "func:cards/views.py.Max": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.Max",
    "name": "Max",
    "path": "pending:Max",
    "type": "function"
  },
  "func:cards/views.py.PageNumberPagination": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.PageNumberPagination",
    "name": "PageNumberPagination",
    "path": "pending:PageNumberPagination",
    "type": "function"
  },
  "func:cards/views.py.Q": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.Q",
    "name": "Q",
    "path": "pending:Q",
    "type": "function"
  },
  "func:cards/views.py.Response": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.Response",
    "name": "Response",
    "path": "pending:Response",
    "type": "function"
  },
  "func:cards/views.py.UserCardCreateUpdateSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.UserCardCreateUpdateSerializer",
    "name": "UserCardCreateUpdateSerializer",
    "path": "pending:UserCardCreateUpdateSerializer",
    "type": "function"
  },
  "func:cards/views.py.UserCardSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.UserCardSerializer",
    "name": "UserCardSerializer",
    "path": "pending:UserCardSerializer",
    "type": "function"
  },
  "func:cards/views.py.UserSpendingProfileSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.UserSpendingProfileSerializer",
    "name": "UserSpendingProfileSerializer",
    "path": "pending:UserSpendingProfileSerializer",
    "type": "function"
  },
  "func:cards/views.py.add_user_card": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 515,
      "name": "add_user_card"
    },
    "id": "func:cards/views.py.add_user_card",
    "line": 515,
    "name": "add_user_card",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.aggregate": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.aggregate",
    "name": "aggregate",
    "path": "pending:aggregate",
    "type": "function"
  },
  "func:cards/views.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:cards/views.py.api_view": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.api_view",
    "name": "api_view",
    "path": "pending:api_view",
    "type": "function"
  },
  "func:cards/views.py.card_recommendations_preview": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 286,
      "name": "card_recommendations_preview"
    },
    "id": "func:cards/views.py.card_recommendations_preview",
    "line": 286,
    "name": "card_recommendations_preview",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.card_search_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 116,
      "name": "card_search_view"
    },
    "id": "func:cards/views.py.card_search_view",
    "line": 116,
    "name": "card_search_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.cards_list_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 334,
      "name": "cards_list_view"
    },
    "id": "func:cards/views.py.cards_list_view",
    "line": 334,
    "name": "cards_list_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.categories_data.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.categories_data.append",
    "name": "categories_data.append",
    "path": "pending:categories_data.append",
    "type": "function"
  },
  "func:cards/views.py.categories_list_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 338,
      "name": "categories_list_view"
    },
    "id": "func:cards/views.py.categories_list_view",
    "line": 338,
    "name": "categories_list_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.categories_with_rewards_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 240,
      "name": "categories_with_rewards_view"
    },
    "id": "func:cards/views.py.categories_with_rewards_view",
    "line": 240,
    "name": "categories_with_rewards_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.category_detail_page_view": {
    "attributes": {
      "args": [
        "request",
        "category_slug"
      ],
      "async": false,
      "line": 342,
      "name": "category_detail_page_view"
    },
    "id": "func:cards/views.py.category_detail_page_view",
    "line": 342,
    "name": "category_detail_page_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.category_detail_view": {
    "attributes": {
      "args": [
        "request",
        "category_slug"
      ],
      "async": false,
      "line": 187,
      "name": "category_detail_view"
    },
    "id": "func:cards/views.py.category_detail_view",
    "line": 187,
    "name": "category_detail_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.check_card_ownership": {
    "attributes": {
      "args": [
        "request",
        "card_id"
      ],
      "async": false,
      "line": 637,
      "name": "check_card_ownership"
    },
    "id": "func:cards/views.py.check_card_ownership",
    "line": 637,
    "name": "check_card_ownership",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.count": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.count",
    "name": "count",
    "path": "pending:count",
    "type": "function"
  },
  "func:cards/views.py.dict": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.dict",
    "name": "dict",
    "path": "pending:dict",
    "type": "function"
  },
  "func:cards/views.py.distinct": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.distinct",
    "name": "distinct",
    "path": "pending:distinct",
    "type": "function"
  },
  "func:cards/views.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:cards/views.py.first": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.first",
    "name": "first",
    "path": "pending:first",
    "type": "function"
  },
  "func:cards/views.py.float": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.float",
    "name": "float",
    "path": "pending:float",
    "type": "function"
  },
  "func:cards/views.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:cards/views.py.get_object_or_404": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.get_object_or_404",
    "name": "get_object_or_404",
    "path": "pending:get_object_or_404",
    "type": "function"
  },
  "func:cards/views.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:cards/views.py.get_profile_privacy": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 436,
      "name": "get_profile_privacy"
    },
    "id": "func:cards/views.py.get_profile_privacy",
    "line": 436,
    "name": "get_profile_privacy",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.get_user_cards": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 495,
      "name": "get_user_cards"
    },
    "id": "func:cards/views.py.get_user_cards",
    "line": 495,
    "name": "get_user_cards",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.index_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 326,
      "name": "index_view"
    },
    "id": "func:cards/views.py.index_view",
    "line": 326,
    "name": "index_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.issuers_list_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 346,
      "name": "issuers_list_view"
    },
    "id": "func:cards/views.py.issuers_list_view",
    "line": 346,
    "name": "issuers_list_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.landing_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 322,
      "name": "landing_view"
    },
    "id": "func:cards/views.py.landing_view",
    "line": 322,
    "name": "landing_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.order_by": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.order_by",
    "name": "order_by",
    "path": "pending:order_by",
    "type": "function"
  },
  "func:cards/views.py.paginator.get_paginated_response": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.paginator.get_paginated_response",
    "name": "paginator.get_paginated_response",
    "path": "pending:paginator.get_paginated_response",
    "type": "function"
  },
  "func:cards/views.py.paginator.paginate_queryset": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.paginator.paginate_queryset",
    "name": "paginator.paginate_queryset",
    "path": "pending:paginator.paginate_queryset",
    "type": "function"
  },
  "func:cards/views.py.profile.generate_share_uuid": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.profile.generate_share_uuid",
    "name": "profile.generate_share_uuid",
    "path": "pending:profile.generate_share_uuid",
    "type": "function"
  },
  "func:cards/views.py.profile.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.profile.save",
    "name": "profile.save",
    "path": "pending:profile.save",
    "type": "function"
  },
  "func:cards/views.py.profile_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 350,
      "name": "profile_view"
    },
    "id": "func:cards/views.py.profile_view",
    "line": 350,
    "name": "profile_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.queryset.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.queryset.filter",
    "name": "queryset.filter",
    "path": "pending:queryset.filter",
    "type": "function"
  },
  "func:cards/views.py.queryset.order_by": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.queryset.order_by",
    "name": "queryset.order_by",
    "path": "pending:queryset.order_by",
    "type": "function"
  },
  "func:cards/views.py.remove_user_card": {
    "attributes": {
      "args": [
        "request",
        "user_card_id"
      ],
      "async": false,
      "line": 612,
      "name": "remove_user_card"
    },
    "id": "func:cards/views.py.remove_user_card",
    "line": 612,
    "name": "remove_user_card",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.render": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.render",
    "name": "render",
    "path": "pending:render",
    "type": "function"
  },
  "func:cards/views.py.reward_categories.aggregate": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.reward_categories.aggregate",
    "name": "reward_categories.aggregate",
    "path": "pending:reward_categories.aggregate",
    "type": "function"
  },
  "func:cards/views.py.select_related": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.select_related",
    "name": "select_related",
    "path": "pending:select_related",
    "type": "function"
  },
  "func:cards/views.py.serializer.generate_recommendations": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.serializer.generate_recommendations",
    "name": "serializer.generate_recommendations",
    "path": "pending:serializer.generate_recommendations",
    "type": "function"
  },
  "func:cards/views.py.serializer.is_valid": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.serializer.is_valid",
    "name": "serializer.is_valid",
    "path": "pending:serializer.is_valid",
    "type": "function"
  },
  "func:cards/views.py.serializer.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.serializer.save",
    "name": "serializer.save",
    "path": "pending:serializer.save",
    "type": "function"
  },
  "func:cards/views.py.shared_profile_view": {
    "attributes": {
      "args": [
        "request",
        "share_uuid"
      ],
      "async": false,
      "line": 471,
      "name": "shared_profile_view"
    },
    "id": "func:cards/views.py.shared_profile_view",
    "line": 471,
    "name": "shared_profile_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.spending_profile_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 80,
      "name": "spending_profile_view"
    },
    "id": "func:cards/views.py.spending_profile_view",
    "line": 80,
    "name": "spending_profile_view",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:cards/views.py.toggle_card_ownership": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 356,
      "name": "toggle_card_ownership"
    },
    "id": "func:cards/views.py.toggle_card_ownership",
    "line": 356,
    "name": "toggle_card_ownership",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.update_profile_privacy": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 385,
      "name": "update_profile_privacy"
    },
    "id": "func:cards/views.py.update_profile_privacy",
    "line": 385,
    "name": "update_profile_privacy",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.update_user_card": {
    "attributes": {
      "args": [
        "request",
        "user_card_id"
      ],
      "async": false,
      "line": 577,
      "name": "update_user_card"
    },
    "id": "func:cards/views.py.update_user_card",
    "line": 577,
    "name": "update_user_card",
    "path": "cards/views.py",
    "type": "function"
  },
  "func:cards/views.py.user_card.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.user_card.delete",
    "name": "user_card.delete",
    "path": "pending:user_card.delete",
    "type": "function"
  },
  "func:cards/views.py.user_card.refresh_from_db": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.user_card.refresh_from_db",
    "name": "user_card.refresh_from_db",
    "path": "pending:user_card.refresh_from_db",
    "type": "function"
  },
  "func:cards/views.py.uuid.UUID": {
    "attributes": {
      "pending": true
    },
    "id": "func:cards/views.py.uuid.UUID",
    "name": "uuid.UUID",
    "path": "pending:uuid.UUID",
    "type": "function"
  },
  "func:convert_cards_data.py.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.append",
    "name": "append",
    "path": "pending:append",
    "type": "function"
  },
  "func:convert_cards_data.py.card_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.card_data.get",
    "name": "card_data.get",
    "path": "pending:card_data.get",
    "type": "function"
  },
  "func:convert_cards_data.py.cards_by_issuer.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.cards_by_issuer.items",
    "name": "cards_by_issuer.items",
    "path": "pending:cards_by_issuer.items",
    "type": "function"
  },
  "func:convert_cards_data.py.categories.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.categories.append",
    "name": "categories.append",
    "path": "pending:categories.append",
    "type": "function"
  },
  "func:convert_cards_data.py.convert_card": {
    "attributes": {
      "args": [
        "card_data"
      ],
      "async": false,
      "line": 54,
      "name": "convert_card"
    },
    "id": "func:convert_cards_data.py.convert_card",
    "line": 54,
    "name": "convert_card",
    "path": "convert_cards_data.py",
    "type": "function"
  },
  "func:convert_cards_data.py.defaultdict": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.defaultdict",
    "name": "defaultdict",
    "path": "pending:defaultdict",
    "type": "function"
  },
  "func:convert_cards_data.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:convert_cards_data.py.extract_reward_categories": {
    "attributes": {
      "args": [
        "card_data"
      ],
      "async": false,
      "line": 36,
      "name": "extract_reward_categories"
    },
    "id": "func:convert_cards_data.py.extract_reward_categories",
    "line": 36,
    "name": "extract_reward_categories",
    "path": "convert_cards_data.py",
    "type": "function"
  },
  "func:convert_cards_data.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:convert_cards_data.py.issuer.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.issuer.lower",
    "name": "issuer.lower",
    "path": "pending:issuer.lower",
    "type": "function"
  },
  "func:convert_cards_data.py.issuer.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.issuer.replace",
    "name": "issuer.replace",
    "path": "pending:issuer.replace",
    "type": "function"
  },
  "func:convert_cards_data.py.issuer_mapping.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.issuer_mapping.get",
    "name": "issuer_mapping.get",
    "path": "pending:issuer_mapping.get",
    "type": "function"
  },
  "func:convert_cards_data.py.json.dump": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.json.dump",
    "name": "json.dump",
    "path": "pending:json.dump",
    "type": "function"
  },
  "func:convert_cards_data.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:convert_cards_data.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:convert_cards_data.py.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.lower",
    "name": "lower",
    "path": "pending:lower",
    "type": "function"
  },
  "func:convert_cards_data.py.main": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 90,
      "name": "main"
    },
    "id": "func:convert_cards_data.py.main",
    "line": 90,
    "name": "main",
    "path": "convert_cards_data.py",
    "type": "function"
  },
  "func:convert_cards_data.py.map_issuer_name": {
    "attributes": {
      "args": [
        "issuer"
      ],
      "async": false,
      "line": 11,
      "name": "map_issuer_name"
    },
    "id": "func:convert_cards_data.py.map_issuer_name",
    "line": 11,
    "name": "map_issuer_name",
    "path": "convert_cards_data.py",
    "type": "function"
  },
  "func:convert_cards_data.py.map_reward_type": {
    "attributes": {
      "args": [
        "card_data"
      ],
      "async": false,
      "line": 27,
      "name": "map_reward_type"
    },
    "id": "func:convert_cards_data.py.map_reward_type",
    "line": 27,
    "name": "map_reward_type",
    "path": "convert_cards_data.py",
    "type": "function"
  },
  "func:convert_cards_data.py.offer.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.offer.get",
    "name": "offer.get",
    "path": "pending:offer.get",
    "type": "function"
  },
  "func:convert_cards_data.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:convert_cards_data.py.print": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.print",
    "name": "print",
    "path": "pending:print",
    "type": "function"
  },
  "func:convert_cards_data.py.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.replace",
    "name": "replace",
    "path": "pending:replace",
    "type": "function"
  },
  "func:convert_cards_data.py.signup_bonus.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.signup_bonus.get",
    "name": "signup_bonus.get",
    "path": "pending:signup_bonus.get",
    "type": "function"
  },
  "func:convert_cards_data.py.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:convert_cards_data.py.title",
    "name": "title",
    "path": "pending:title",
    "type": "function"
  },
  "func:creditcard_guru/urls.py.JsonResponse": {
    "attributes": {
      "pending": true
    },
    "id": "func:creditcard_guru/urls.py.JsonResponse",
    "name": "JsonResponse",
    "path": "pending:JsonResponse",
    "type": "function"
  },
  "func:creditcard_guru/urls.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:creditcard_guru/urls.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:creditcard_guru/urls.py.home_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 23,
      "name": "home_view"
    },
    "id": "func:creditcard_guru/urls.py.home_view",
    "line": 23,
    "name": "home_view",
    "path": "creditcard_guru/urls.py",
    "type": "function"
  },
  "func:creditcard_guru/urls.py.render": {
    "attributes": {
      "pending": true
    },
    "id": "func:creditcard_guru/urls.py.render",
    "name": "render",
    "path": "pending:render",
    "type": "function"
  },
  "func:manage.py.ImportError": {
    "attributes": {
      "pending": true
    },
    "id": "func:manage.py.ImportError",
    "name": "ImportError",
    "path": "pending:ImportError",
    "type": "function"
  },
  "func:manage.py.execute_from_command_line": {
    "attributes": {
      "pending": true
    },
    "id": "func:manage.py.execute_from_command_line",
    "name": "execute_from_command_line",
    "path": "pending:execute_from_command_line",
    "type": "function"
  },
  "func:manage.py.main": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 7,
      "name": "main"
    },
    "id": "func:manage.py.main",
    "line": 7,
    "name": "main",
    "path": "manage.py",
    "type": "function"
  },
  "func:manage.py.setdefault": {
    "attributes": {
      "pending": true
    },
    "id": "func:manage.py.setdefault",
    "name": "setdefault",
    "path": "pending:setdefault",
    "type": "function"
  },
  "func:roadmaps/models.py.__str__": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 71,
      "name": "__str__"
    },
    "id": "func:roadmaps/models.py.__str__",
    "line": 71,
    "name": "__str__",
    "path": "roadmaps/models.py",
    "type": "function"
  },
  "func:roadmaps/models.py.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/models.py.title",
    "name": "title",
    "path": "pending:title",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.Decimal": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.Decimal",
    "name": "Decimal",
    "path": "pending:Decimal",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.__init__": {
    "attributes": {
      "args": [
        "self",
        "profile",
        "user_cards_data"
      ],
      "async": false,
      "line": 17,
      "name": "__init__"
    },
    "id": "func:roadmaps/recommendation_engine.py.__init__",
    "line": 17,
    "name": "__init__",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._build_parent_category_spending": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 836,
      "name": "_build_parent_category_spending"
    },
    "id": "func:roadmaps/recommendation_engine.py._build_parent_category_spending",
    "line": 836,
    "name": "_build_parent_category_spending",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_card_allocated_breakdown": {
    "attributes": {
      "args": [
        "self",
        "card",
        "portfolio_allocation"
      ],
      "async": false,
      "line": 1248,
      "name": "_calculate_card_allocated_breakdown"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_card_allocated_breakdown",
    "line": 1248,
    "name": "_calculate_card_allocated_breakdown",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_card_annual_rewards": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 1052,
      "name": "_calculate_card_annual_rewards"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_card_annual_rewards",
    "line": 1052,
    "name": "_calculate_card_annual_rewards",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_card_credits_value": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 1587,
      "name": "_calculate_card_credits_value"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_card_credits_value",
    "line": 1587,
    "name": "_calculate_card_credits_value",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_card_rewards_breakdown": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 1337,
      "name": "_calculate_card_rewards_breakdown"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_card_rewards_breakdown",
    "line": 1337,
    "name": "_calculate_card_rewards_breakdown",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_portfolio_allocation": {
    "attributes": {
      "args": [
        "self",
        "portfolio_cards"
      ],
      "async": false,
      "line": 1057,
      "name": "_calculate_portfolio_allocation"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_portfolio_allocation",
    "line": 1057,
    "name": "_calculate_portfolio_allocation",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_portfolio_summary": {
    "attributes": {
      "args": [
        "self",
        "recommendations"
      ],
      "async": false,
      "line": 1657,
      "name": "_calculate_portfolio_summary"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_portfolio_summary",
    "line": 1657,
    "name": "_calculate_portfolio_summary",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_scenario_portfolio_value": {
    "attributes": {
      "args": [
        "self",
        "actions"
      ],
      "async": false,
      "line": 725,
      "name": "_calculate_scenario_portfolio_value"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_scenario_portfolio_value",
    "line": 725,
    "name": "_calculate_scenario_portfolio_value",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_smart_card_value": {
    "attributes": {
      "args": [
        "self",
        "card",
        "signup_bonus"
      ],
      "async": false,
      "line": 862,
      "name": "_calculate_smart_card_value"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_smart_card_value",
    "line": 862,
    "name": "_calculate_smart_card_value",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_spending_efficiency": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 909,
      "name": "_calculate_spending_efficiency"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_spending_efficiency",
    "line": 909,
    "name": "_calculate_spending_efficiency",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._calculate_total_rewards": {
    "attributes": {
      "args": [
        "self",
        "recommendations"
      ],
      "async": false,
      "line": 1652,
      "name": "_calculate_total_rewards"
    },
    "id": "func:roadmaps/recommendation_engine.py._calculate_total_rewards",
    "line": 1652,
    "name": "_calculate_total_rewards",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._can_meet_signup_requirement": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 1484,
      "name": "_can_meet_signup_requirement"
    },
    "id": "func:roadmaps/recommendation_engine.py._can_meet_signup_requirement",
    "line": 1484,
    "name": "_can_meet_signup_requirement",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._evaluate_portfolio_scenario": {
    "attributes": {
      "args": [
        "self",
        "cards_to_keep",
        "cards_to_apply",
        "available_cards",
        "max_total_cards"
      ],
      "async": false,
      "line": 316,
      "name": "_evaluate_portfolio_scenario"
    },
    "id": "func:roadmaps/recommendation_engine.py._evaluate_portfolio_scenario",
    "line": 316,
    "name": "_evaluate_portfolio_scenario",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._find_new_cards": {
    "attributes": {
      "args": [
        "self",
        "eligible_cards",
        "max_cards"
      ],
      "async": false,
      "line": 964,
      "name": "_find_new_cards"
    },
    "id": "func:roadmaps/recommendation_engine.py._find_new_cards",
    "line": 964,
    "name": "_find_new_cards",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._find_optimal_portfolio": {
    "attributes": {
      "args": [
        "self",
        "current_cards",
        "available_cards",
        "max_cards"
      ],
      "async": false,
      "line": 276,
      "name": "_find_optimal_portfolio"
    },
    "id": "func:roadmaps/recommendation_engine.py._find_optimal_portfolio",
    "line": 276,
    "name": "_find_optimal_portfolio",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._generate_card_reasoning": {
    "attributes": {
      "args": [
        "self",
        "card_data"
      ],
      "async": false,
      "line": 651,
      "name": "_generate_card_reasoning"
    },
    "id": "func:roadmaps/recommendation_engine.py._generate_card_reasoning",
    "line": 651,
    "name": "_generate_card_reasoning",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._generate_portfolio_optimized_recommendations": {
    "attributes": {
      "args": [
        "self",
        "eligible_cards",
        "roadmap"
      ],
      "async": false,
      "line": 219,
      "name": "_generate_portfolio_optimized_recommendations"
    },
    "id": "func:roadmaps/recommendation_engine.py._generate_portfolio_optimized_recommendations",
    "line": 219,
    "name": "_generate_portfolio_optimized_recommendations",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._get_best_signup_bonus_card": {
    "attributes": {
      "args": [
        "self",
        "eligible_cards"
      ],
      "async": false,
      "line": 1509,
      "name": "_get_best_signup_bonus_card"
    },
    "id": "func:roadmaps/recommendation_engine.py._get_best_signup_bonus_card",
    "line": 1509,
    "name": "_get_best_signup_bonus_card",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._get_filtered_cards": {
    "attributes": {
      "args": [
        "self",
        "roadmap"
      ],
      "async": false,
      "line": 189,
      "name": "_get_filtered_cards"
    },
    "id": "func:roadmaps/recommendation_engine.py._get_filtered_cards",
    "line": 189,
    "name": "_get_filtered_cards",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._get_signup_bonus_value": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 1554,
      "name": "_get_signup_bonus_value"
    },
    "id": "func:roadmaps/recommendation_engine.py._get_signup_bonus_value",
    "line": 1554,
    "name": "_get_signup_bonus_value",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._is_eligible_for_card": {
    "attributes": {
      "args": [
        "self",
        "card"
      ],
      "async": false,
      "line": 1025,
      "name": "_is_eligible_for_card"
    },
    "id": "func:roadmaps/recommendation_engine.py._is_eligible_for_card",
    "line": 1025,
    "name": "_is_eligible_for_card",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._optimize_card_portfolio": {
    "attributes": {
      "args": [
        "self",
        "card_scores",
        "max_cards"
      ],
      "async": false,
      "line": 487,
      "name": "_optimize_card_portfolio"
    },
    "id": "func:roadmaps/recommendation_engine.py._optimize_card_portfolio",
    "line": 487,
    "name": "_optimize_card_portfolio",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._select_best_new_cards": {
    "attributes": {
      "args": [
        "self",
        "available_cards",
        "max_new_cards"
      ],
      "async": false,
      "line": 680,
      "name": "_select_best_new_cards"
    },
    "id": "func:roadmaps/recommendation_engine.py._select_best_new_cards",
    "line": 680,
    "name": "_select_best_new_cards",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py._select_optimal_card_combination": {
    "attributes": {
      "args": [
        "self",
        "all_cards",
        "max_cards"
      ],
      "async": false,
      "line": 385,
      "name": "_select_optimal_card_combination"
    },
    "id": "func:roadmaps/recommendation_engine.py._select_optimal_card_combination",
    "line": 385,
    "name": "_select_optimal_card_combination",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.action.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.action.title",
    "name": "action.title",
    "path": "pending:action.title",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.actions.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.actions.append",
    "name": "actions.append",
    "path": "pending:actions.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.actions.extend": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.actions.extend",
    "name": "actions.extend",
    "path": "pending:actions.extend",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.actions_summary.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.actions_summary.get",
    "name": "actions_summary.get",
    "path": "pending:actions_summary.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.all_spending.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.all_spending.items",
    "name": "all_spending.items",
    "path": "pending:all_spending.items",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.allocation_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.allocation_data.get",
    "name": "allocation_data.get",
    "path": "pending:allocation_data.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.any": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.any",
    "name": "any",
    "path": "pending:any",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.append",
    "name": "append",
    "path": "pending:append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.breakdown_details.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.breakdown_details.append",
    "name": "breakdown_details.append",
    "path": "pending:breakdown_details.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.breakdown_item.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.breakdown_item.get",
    "name": "breakdown_item.get",
    "path": "pending:breakdown_item.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.calculate_portfolio_value": {
    "attributes": {
      "args": [
        "card_combination"
      ],
      "async": false,
      "line": 513,
      "name": "calculate_portfolio_value"
    },
    "id": "func:roadmaps/recommendation_engine.py.calculate_portfolio_value",
    "line": 513,
    "name": "calculate_portfolio_value",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.card_action.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.card_action.get",
    "name": "card_action.get",
    "path": "pending:card_action.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.card_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.card_data.get",
    "name": "card_data.get",
    "path": "pending:card_data.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.card_scores.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.card_scores.append",
    "name": "card_scores.append",
    "path": "pending:card_scores.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.card_scores.sort": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.card_scores.sort",
    "name": "card_scores.sort",
    "path": "pending:card_scores.sort",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.cards_to_apply.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.cards_to_apply.append",
    "name": "cards_to_apply.append",
    "path": "pending:cards_to_apply.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.cards_to_keep.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.cards_to_keep.append",
    "name": "cards_to_keep.append",
    "path": "pending:cards_to_keep.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.category_best_allocation.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.category_best_allocation.items",
    "name": "category_best_allocation.items",
    "path": "pending:category_best_allocation.items",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.category_best_allocation.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.category_best_allocation.values",
    "name": "category_best_allocation.values",
    "path": "pending:category_best_allocation.values",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.category_best_rates.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.category_best_rates.items",
    "name": "category_best_rates.items",
    "path": "pending:category_best_rates.items",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.category_optimization.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.category_optimization.values",
    "name": "category_optimization.values",
    "path": "pending:category_optimization.values",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.category_slug.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.category_slug.replace",
    "name": "category_slug.replace",
    "path": "pending:category_slug.replace",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.combinations": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.combinations",
    "name": "combinations",
    "path": "pending:combinations",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.count": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.count",
    "name": "count",
    "path": "pending:count",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.credits_breakdown.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.credits_breakdown.append",
    "name": "credits_breakdown.append",
    "path": "pending:credits_breakdown.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.date": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.date",
    "name": "date",
    "path": "pending:date",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.datetime.now": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.datetime.now",
    "name": "datetime.now",
    "path": "pending:datetime.now",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.defaultdict": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.defaultdict",
    "name": "defaultdict",
    "path": "pending:defaultdict",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.dict": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.dict",
    "name": "dict",
    "path": "pending:dict",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.enumerate": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.enumerate",
    "name": "enumerate",
    "path": "pending:enumerate",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.filtered_breakdown.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.filtered_breakdown.append",
    "name": "filtered_breakdown.append",
    "path": "pending:filtered_breakdown.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.final_allocation.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.final_allocation.values",
    "name": "final_allocation.values",
    "path": "pending:final_allocation.values",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.first": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.first",
    "name": "first",
    "path": "pending:first",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.float": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.float",
    "name": "float",
    "path": "pending:float",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.full_optimization.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.full_optimization.get",
    "name": "full_optimization.get",
    "path": "pending:full_optimization.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.generate_quick_recommendations": {
    "attributes": {
      "args": [
        "self",
        "roadmap"
      ],
      "async": false,
      "line": 52,
      "name": "generate_quick_recommendations"
    },
    "id": "func:roadmaps/recommendation_engine.py.generate_quick_recommendations",
    "line": 52,
    "name": "generate_quick_recommendations",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.generate_roadmap": {
    "attributes": {
      "args": [
        "self",
        "roadmap"
      ],
      "async": false,
      "line": 141,
      "name": "generate_roadmap"
    },
    "id": "func:roadmaps/recommendation_engine.py.generate_roadmap",
    "line": 141,
    "name": "generate_roadmap",
    "path": "roadmaps/recommendation_engine.py",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.getattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.getattr",
    "name": "getattr",
    "path": "pending:getattr",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.hasattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.hasattr",
    "name": "hasattr",
    "path": "pending:hasattr",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.int": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.int",
    "name": "int",
    "path": "pending:int",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.items",
    "name": "items",
    "path": "pending:items",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.list": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.list",
    "name": "list",
    "path": "pending:list",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.lower",
    "name": "lower",
    "path": "pending:lower",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.map": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.map",
    "name": "map",
    "path": "pending:map",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.match.group": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.match.group",
    "name": "match.group",
    "path": "pending:match.group",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.max": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.max",
    "name": "max",
    "path": "pending:max",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.min": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.min",
    "name": "min",
    "path": "pending:min",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.mock_user_cards.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.mock_user_cards.append",
    "name": "mock_user_cards.append",
    "path": "pending:mock_user_cards.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.other_keeps_applies.sort": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.other_keeps_applies.sort",
    "name": "other_keeps_applies.sort",
    "path": "pending:other_keeps_applies.sort",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.parent_category_spending.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.parent_category_spending.get",
    "name": "parent_category_spending.get",
    "path": "pending:parent_category_spending.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.parent_category_spending.keys": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.parent_category_spending.keys",
    "name": "parent_category_spending.keys",
    "path": "pending:parent_category_spending.keys",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.parent_category_spending.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.parent_category_spending.values",
    "name": "parent_category_spending.values",
    "path": "pending:parent_category_spending.values",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.parse_date": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.parse_date",
    "name": "parse_date",
    "path": "pending:parse_date",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.portfolio_allocation.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.portfolio_allocation.items",
    "name": "portfolio_allocation.items",
    "path": "pending:portfolio_allocation.items",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.portfolio_allocation.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.portfolio_allocation.values",
    "name": "portfolio_allocation.values",
    "path": "pending:portfolio_allocation.values",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.portfolio_summary.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.portfolio_summary.get",
    "name": "portfolio_summary.get",
    "path": "pending:portfolio_summary.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.print": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.print",
    "name": "print",
    "path": "pending:print",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.queryset.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.queryset.filter",
    "name": "queryset.filter",
    "path": "pending:queryset.filter",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.queryset.prefetch_related": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.queryset.prefetch_related",
    "name": "queryset.prefetch_related",
    "path": "pending:queryset.prefetch_related",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.range": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.range",
    "name": "range",
    "path": "pending:range",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.re.search": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.re.search",
    "name": "re.search",
    "path": "pending:re.search",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.rec.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.rec.get",
    "name": "rec.get",
    "path": "pending:rec.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.recommendations.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.recommendations.append",
    "name": "recommendations.append",
    "path": "pending:recommendations.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.remaining_cards.sort": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.remaining_cards.sort",
    "name": "remaining_cards.sort",
    "path": "pending:remaining_cards.sort",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.replace",
    "name": "replace",
    "path": "pending:replace",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.rewards_breakdown.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.rewards_breakdown.get",
    "name": "rewards_breakdown.get",
    "path": "pending:rewards_breakdown.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.saved_recommendations.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.saved_recommendations.append",
    "name": "saved_recommendations.append",
    "path": "pending:saved_recommendations.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.scenarios.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.scenarios.append",
    "name": "scenarios.append",
    "path": "pending:scenarios.append",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.select_related": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.select_related",
    "name": "select_related",
    "path": "pending:select_related",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._build_parent_category_spending": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._build_parent_category_spending",
    "name": "self._build_parent_category_spending",
    "path": "pending:self._build_parent_category_spending",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_card_allocated_breakdown": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_card_allocated_breakdown",
    "name": "self._calculate_card_allocated_breakdown",
    "path": "pending:self._calculate_card_allocated_breakdown",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_card_credits_value": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_card_credits_value",
    "name": "self._calculate_card_credits_value",
    "path": "pending:self._calculate_card_credits_value",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_card_rewards_breakdown": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_card_rewards_breakdown",
    "name": "self._calculate_card_rewards_breakdown",
    "path": "pending:self._calculate_card_rewards_breakdown",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_portfolio_allocation": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_portfolio_allocation",
    "name": "self._calculate_portfolio_allocation",
    "path": "pending:self._calculate_portfolio_allocation",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_portfolio_summary": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_portfolio_summary",
    "name": "self._calculate_portfolio_summary",
    "path": "pending:self._calculate_portfolio_summary",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_scenario_portfolio_value": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_scenario_portfolio_value",
    "name": "self._calculate_scenario_portfolio_value",
    "path": "pending:self._calculate_scenario_portfolio_value",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_smart_card_value": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_smart_card_value",
    "name": "self._calculate_smart_card_value",
    "path": "pending:self._calculate_smart_card_value",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_spending_efficiency": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_spending_efficiency",
    "name": "self._calculate_spending_efficiency",
    "path": "pending:self._calculate_spending_efficiency",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._calculate_total_rewards": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._calculate_total_rewards",
    "name": "self._calculate_total_rewards",
    "path": "pending:self._calculate_total_rewards",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._can_meet_signup_requirement": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._can_meet_signup_requirement",
    "name": "self._can_meet_signup_requirement",
    "path": "pending:self._can_meet_signup_requirement",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._evaluate_portfolio_scenario": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._evaluate_portfolio_scenario",
    "name": "self._evaluate_portfolio_scenario",
    "path": "pending:self._evaluate_portfolio_scenario",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._find_optimal_portfolio": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._find_optimal_portfolio",
    "name": "self._find_optimal_portfolio",
    "path": "pending:self._find_optimal_portfolio",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._generate_card_reasoning": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._generate_card_reasoning",
    "name": "self._generate_card_reasoning",
    "path": "pending:self._generate_card_reasoning",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._generate_portfolio_optimized_recommendations": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._generate_portfolio_optimized_recommendations",
    "name": "self._generate_portfolio_optimized_recommendations",
    "path": "pending:self._generate_portfolio_optimized_recommendations",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._get_best_signup_bonus_card": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._get_best_signup_bonus_card",
    "name": "self._get_best_signup_bonus_card",
    "path": "pending:self._get_best_signup_bonus_card",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._get_filtered_cards": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._get_filtered_cards",
    "name": "self._get_filtered_cards",
    "path": "pending:self._get_filtered_cards",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._get_signup_bonus_value": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._get_signup_bonus_value",
    "name": "self._get_signup_bonus_value",
    "path": "pending:self._get_signup_bonus_value",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._is_eligible_for_card": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._is_eligible_for_card",
    "name": "self._is_eligible_for_card",
    "path": "pending:self._is_eligible_for_card",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._optimize_card_portfolio": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._optimize_card_portfolio",
    "name": "self._optimize_card_portfolio",
    "path": "pending:self._optimize_card_portfolio",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._select_best_new_cards": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._select_best_new_cards",
    "name": "self._select_best_new_cards",
    "path": "pending:self._select_best_new_cards",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self._select_optimal_card_combination": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self._select_optimal_card_combination",
    "name": "self._select_optimal_card_combination",
    "path": "pending:self._select_optimal_card_combination",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.self.generate_quick_recommendations": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.self.generate_quick_recommendations",
    "name": "self.generate_quick_recommendations",
    "path": "pending:self.generate_quick_recommendations",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.set": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.set",
    "name": "set",
    "path": "pending:set",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.signup_bonus.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.signup_bonus.get",
    "name": "signup_bonus.get",
    "path": "pending:signup_bonus.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.signup_bonus_allocations.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.signup_bonus_allocations.get",
    "name": "signup_bonus_allocations.get",
    "path": "pending:signup_bonus_allocations.get",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.spending_by_category.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.spending_by_category.items",
    "name": "spending_by_category.items",
    "path": "pending:spending_by_category.items",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.split": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.split",
    "name": "split",
    "path": "pending:split",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.sum": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.sum",
    "name": "sum",
    "path": "pending:sum",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.timedelta": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.timedelta",
    "name": "timedelta",
    "path": "pending:timedelta",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.title",
    "name": "title",
    "path": "pending:title",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.type": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.type",
    "name": "type",
    "path": "pending:type",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.unique_credits.add": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.unique_credits.add",
    "name": "unique_credits.add",
    "path": "pending:unique_credits.add",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.update_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.update_or_create",
    "name": "update_or_create",
    "path": "pending:update_or_create",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.upper": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.upper",
    "name": "upper",
    "path": "pending:upper",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.values": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.values",
    "name": "values",
    "path": "pending:values",
    "type": "function"
  },
  "func:roadmaps/recommendation_engine.py.values_list": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/recommendation_engine.py.values_list",
    "name": "values_list",
    "path": "pending:values_list",
    "type": "function"
  },
  "func:roadmaps/serializers.py.RecommendationEngine": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.RecommendationEngine",
    "name": "RecommendationEngine",
    "path": "pending:RecommendationEngine",
    "type": "function"
  },
  "func:roadmaps/serializers.py.add": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.add",
    "name": "add",
    "path": "pending:add",
    "type": "function"
  },
  "func:roadmaps/serializers.py.all": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.all",
    "name": "all",
    "path": "pending:all",
    "type": "function"
  },
  "func:roadmaps/serializers.py.card_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.card_data.get",
    "name": "card_data.get",
    "path": "pending:card_data.get",
    "type": "function"
  },
  "func:roadmaps/serializers.py.clear": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.clear",
    "name": "clear",
    "path": "pending:clear",
    "type": "function"
  },
  "func:roadmaps/serializers.py.create": {
    "attributes": {
      "args": [
        "self",
        "validated_data"
      ],
      "async": false,
      "line": 53,
      "name": "create"
    },
    "id": "func:roadmaps/serializers.py.create",
    "line": 53,
    "name": "create",
    "path": "roadmaps/serializers.py",
    "type": "function"
  },
  "func:roadmaps/serializers.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:roadmaps/serializers.py.engine.generate_quick_recommendations": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.engine.generate_quick_recommendations",
    "name": "engine.generate_quick_recommendations",
    "path": "pending:engine.generate_quick_recommendations",
    "type": "function"
  },
  "func:roadmaps/serializers.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:roadmaps/serializers.py.first": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.first",
    "name": "first",
    "path": "pending:first",
    "type": "function"
  },
  "func:roadmaps/serializers.py.generate_recommendations": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 116,
      "name": "generate_recommendations"
    },
    "id": "func:roadmaps/serializers.py.generate_recommendations",
    "line": 116,
    "name": "generate_recommendations",
    "path": "roadmaps/serializers.py",
    "type": "function"
  },
  "func:roadmaps/serializers.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:roadmaps/serializers.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:roadmaps/serializers.py.int": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.int",
    "name": "int",
    "path": "pending:int",
    "type": "function"
  },
  "func:roadmaps/serializers.py.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.items",
    "name": "items",
    "path": "pending:items",
    "type": "function"
  },
  "func:roadmaps/serializers.py.roadmap.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.roadmap.delete",
    "name": "roadmap.delete",
    "path": "pending:roadmap.delete",
    "type": "function"
  },
  "func:roadmaps/serializers.py.roadmap.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.roadmap.save",
    "name": "roadmap.save",
    "path": "pending:roadmap.save",
    "type": "function"
  },
  "func:roadmaps/serializers.py.set": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.set",
    "name": "set",
    "path": "pending:set",
    "type": "function"
  },
  "func:roadmaps/serializers.py.setattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.setattr",
    "name": "setattr",
    "path": "pending:setattr",
    "type": "function"
  },
  "func:roadmaps/serializers.py.validated_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.validated_data.get",
    "name": "validated_data.get",
    "path": "pending:validated_data.get",
    "type": "function"
  },
  "func:roadmaps/serializers.py.validated_data.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.validated_data.items",
    "name": "validated_data.items",
    "path": "pending:validated_data.items",
    "type": "function"
  },
  "func:roadmaps/serializers.py.validated_data.pop": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.validated_data.pop",
    "name": "validated_data.pop",
    "path": "pending:validated_data.pop",
    "type": "function"
  },
  "func:roadmaps/serializers.py.values_list": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/serializers.py.values_list",
    "name": "values_list",
    "path": "pending:values_list",
    "type": "function"
  },
  "func:roadmaps/views.py.Avg": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.Avg",
    "name": "Avg",
    "path": "pending:Avg",
    "type": "function"
  },
  "func:roadmaps/views.py.Count": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.Count",
    "name": "Count",
    "path": "pending:Count",
    "type": "function"
  },
  "func:roadmaps/views.py.CreateRoadmapSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.CreateRoadmapSerializer",
    "name": "CreateRoadmapSerializer",
    "path": "pending:CreateRoadmapSerializer",
    "type": "function"
  },
  "func:roadmaps/views.py.GenerateRoadmapSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.GenerateRoadmapSerializer",
    "name": "GenerateRoadmapSerializer",
    "path": "pending:GenerateRoadmapSerializer",
    "type": "function"
  },
  "func:roadmaps/views.py.RecommendationEngine": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.RecommendationEngine",
    "name": "RecommendationEngine",
    "path": "pending:RecommendationEngine",
    "type": "function"
  },
  "func:roadmaps/views.py.Response": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.Response",
    "name": "Response",
    "path": "pending:Response",
    "type": "function"
  },
  "func:roadmaps/views.py.RoadmapSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.RoadmapSerializer",
    "name": "RoadmapSerializer",
    "path": "pending:RoadmapSerializer",
    "type": "function"
  },
  "func:roadmaps/views.py.Sum": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.Sum",
    "name": "Sum",
    "path": "pending:Sum",
    "type": "function"
  },
  "func:roadmaps/views.py.api_view": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.api_view",
    "name": "api_view",
    "path": "pending:api_view",
    "type": "function"
  },
  "func:roadmaps/views.py.create_roadmap_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 66,
      "name": "create_roadmap_view"
    },
    "id": "func:roadmaps/views.py.create_roadmap_view",
    "line": 66,
    "name": "create_roadmap_view",
    "path": "roadmaps/views.py",
    "type": "function"
  },
  "func:roadmaps/views.py.engine.generate_roadmap": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.engine.generate_roadmap",
    "name": "engine.generate_roadmap",
    "path": "pending:engine.generate_roadmap",
    "type": "function"
  },
  "func:roadmaps/views.py.export_scenario_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 218,
      "name": "export_scenario_view"
    },
    "id": "func:roadmaps/views.py.export_scenario_view",
    "line": 218,
    "name": "export_scenario_view",
    "path": "roadmaps/views.py",
    "type": "function"
  },
  "func:roadmaps/views.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:roadmaps/views.py.float": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.float",
    "name": "float",
    "path": "pending:float",
    "type": "function"
  },
  "func:roadmaps/views.py.generate_roadmap_view": {
    "attributes": {
      "args": [
        "request",
        "roadmap_id"
      ],
      "async": false,
      "line": 82,
      "name": "generate_roadmap_view"
    },
    "id": "func:roadmaps/views.py.generate_roadmap_view",
    "line": 82,
    "name": "generate_roadmap_view",
    "path": "roadmaps/views.py",
    "type": "function"
  },
  "func:roadmaps/views.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:roadmaps/views.py.get_object_or_404": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.get_object_or_404",
    "name": "get_object_or_404",
    "path": "pending:get_object_or_404",
    "type": "function"
  },
  "func:roadmaps/views.py.get_queryset": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 46,
      "name": "get_queryset"
    },
    "id": "func:roadmaps/views.py.get_queryset",
    "line": 46,
    "name": "get_queryset",
    "path": "roadmaps/views.py",
    "type": "function"
  },
  "func:roadmaps/views.py.isoformat": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.isoformat",
    "name": "isoformat",
    "path": "pending:isoformat",
    "type": "function"
  },
  "func:roadmaps/views.py.none": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.none",
    "name": "none",
    "path": "pending:none",
    "type": "function"
  },
  "func:roadmaps/views.py.order_by": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.order_by",
    "name": "order_by",
    "path": "pending:order_by",
    "type": "function"
  },
  "func:roadmaps/views.py.portfolio_summary.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.portfolio_summary.get",
    "name": "portfolio_summary.get",
    "path": "pending:portfolio_summary.get",
    "type": "function"
  },
  "func:roadmaps/views.py.prefetch_related": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.prefetch_related",
    "name": "prefetch_related",
    "path": "pending:prefetch_related",
    "type": "function"
  },
  "func:roadmaps/views.py.queryset.aggregate": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.queryset.aggregate",
    "name": "queryset.aggregate",
    "path": "pending:queryset.aggregate",
    "type": "function"
  },
  "func:roadmaps/views.py.queryset.order_by": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.queryset.order_by",
    "name": "queryset.order_by",
    "path": "pending:queryset.order_by",
    "type": "function"
  },
  "func:roadmaps/views.py.quick_recommendation_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 123,
      "name": "quick_recommendation_view"
    },
    "id": "func:roadmaps/views.py.quick_recommendation_view",
    "line": 123,
    "name": "quick_recommendation_view",
    "path": "roadmaps/views.py",
    "type": "function"
  },
  "func:roadmaps/views.py.rec.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.rec.get",
    "name": "rec.get",
    "path": "pending:rec.get",
    "type": "function"
  },
  "func:roadmaps/views.py.roadmap.refresh_from_db": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.roadmap.refresh_from_db",
    "name": "roadmap.refresh_from_db",
    "path": "pending:roadmap.refresh_from_db",
    "type": "function"
  },
  "func:roadmaps/views.py.roadmap_stats_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 185,
      "name": "roadmap_stats_view"
    },
    "id": "func:roadmaps/views.py.roadmap_stats_view",
    "line": 185,
    "name": "roadmap_stats_view",
    "path": "roadmaps/views.py",
    "type": "function"
  },
  "func:roadmaps/views.py.round": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.round",
    "name": "round",
    "path": "pending:round",
    "type": "function"
  },
  "func:roadmaps/views.py.serializer.generate_recommendations": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.serializer.generate_recommendations",
    "name": "serializer.generate_recommendations",
    "path": "pending:serializer.generate_recommendations",
    "type": "function"
  },
  "func:roadmaps/views.py.serializer.is_valid": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.serializer.is_valid",
    "name": "serializer.is_valid",
    "path": "pending:serializer.is_valid",
    "type": "function"
  },
  "func:roadmaps/views.py.serializer.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.serializer.save",
    "name": "serializer.save",
    "path": "pending:serializer.save",
    "type": "function"
  },
  "func:roadmaps/views.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:roadmaps/views.py.sum": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.sum",
    "name": "sum",
    "path": "pending:sum",
    "type": "function"
  },
  "func:roadmaps/views.py.timezone.now": {
    "attributes": {
      "pending": true
    },
    "id": "func:roadmaps/views.py.timezone.now",
    "name": "timezone.now",
    "path": "pending:timezone.now",
    "type": "function"
  },
  "func:setup_data.py.Path": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.Path",
    "name": "Path",
    "path": "pending:Path",
    "type": "function"
  },
  "func:setup_data.py.exists": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.exists",
    "name": "exists",
    "path": "pending:exists",
    "type": "function"
  },
  "func:setup_data.py.f.endswith": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.f.endswith",
    "name": "f.endswith",
    "path": "pending:f.endswith",
    "type": "function"
  },
  "func:setup_data.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:setup_data.py.glob.glob": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.glob.glob",
    "name": "glob.glob",
    "path": "pending:glob.glob",
    "type": "function"
  },
  "func:setup_data.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:setup_data.py.line.strip": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.line.strip",
    "name": "line.strip",
    "path": "pending:line.strip",
    "type": "function"
  },
  "func:setup_data.py.main": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 37,
      "name": "main"
    },
    "id": "func:setup_data.py.main",
    "line": 37,
    "name": "main",
    "path": "setup_data.py",
    "type": "function"
  },
  "func:setup_data.py.print": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.print",
    "name": "print",
    "path": "pending:print",
    "type": "function"
  },
  "func:setup_data.py.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.replace",
    "name": "replace",
    "path": "pending:replace",
    "type": "function"
  },
  "func:setup_data.py.run_command": {
    "attributes": {
      "args": [
        "command",
        "description"
      ],
      "async": false,
      "line": 13,
      "name": "run_command"
    },
    "id": "func:setup_data.py.run_command",
    "line": 13,
    "name": "run_command",
    "path": "setup_data.py",
    "type": "function"
  },
  "func:setup_data.py.sorted": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.sorted",
    "name": "sorted",
    "path": "pending:sorted",
    "type": "function"
  },
  "func:setup_data.py.split": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.split",
    "name": "split",
    "path": "pending:split",
    "type": "function"
  },
  "func:setup_data.py.strip": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.strip",
    "name": "strip",
    "path": "pending:strip",
    "type": "function"
  },
  "func:setup_data.py.subprocess.run": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.subprocess.run",
    "name": "subprocess.run",
    "path": "pending:subprocess.run",
    "type": "function"
  },
  "func:setup_data.py.sys.exit": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.sys.exit",
    "name": "sys.exit",
    "path": "pending:sys.exit",
    "type": "function"
  },
  "func:setup_data.py.title": {
    "attributes": {
      "pending": true
    },
    "id": "func:setup_data.py.title",
    "name": "title",
    "path": "pending:title",
    "type": "function"
  },
  "func:split_scenarios.py.any": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.any",
    "name": "any",
    "path": "pending:any",
    "type": "function"
  },
  "func:split_scenarios.py.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.append",
    "name": "append",
    "path": "pending:append",
    "type": "function"
  },
  "func:split_scenarios.py.categories.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.categories.items",
    "name": "categories.items",
    "path": "pending:categories.items",
    "type": "function"
  },
  "func:split_scenarios.py.categorize_scenarios": {
    "attributes": {
      "args": [
        "scenarios_data"
      ],
      "async": false,
      "line": 16,
      "name": "categorize_scenarios"
    },
    "id": "func:split_scenarios.py.categorize_scenarios",
    "line": 16,
    "name": "categorize_scenarios",
    "path": "split_scenarios.py",
    "type": "function"
  },
  "func:split_scenarios.py.create_index_file": {
    "attributes": {
      "args": [
        "files_created",
        "output_dir"
      ],
      "async": false,
      "line": 117,
      "name": "create_index_file"
    },
    "id": "func:split_scenarios.py.create_index_file",
    "line": 117,
    "name": "create_index_file",
    "path": "split_scenarios.py",
    "type": "function"
  },
  "func:split_scenarios.py.files_created.append": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.files_created.append",
    "name": "files_created.append",
    "path": "pending:files_created.append",
    "type": "function"
  },
  "func:split_scenarios.py.join": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.join",
    "name": "join",
    "path": "pending:join",
    "type": "function"
  },
  "func:split_scenarios.py.json.dump": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.json.dump",
    "name": "json.dump",
    "path": "pending:json.dump",
    "type": "function"
  },
  "func:split_scenarios.py.json.load": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.json.load",
    "name": "json.load",
    "path": "pending:json.load",
    "type": "function"
  },
  "func:split_scenarios.py.len": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.len",
    "name": "len",
    "path": "pending:len",
    "type": "function"
  },
  "func:split_scenarios.py.load_scenarios": {
    "attributes": {
      "args": [],
      "async": false,
      "line": 11,
      "name": "load_scenarios"
    },
    "id": "func:split_scenarios.py.load_scenarios",
    "line": 11,
    "name": "load_scenarios",
    "path": "split_scenarios.py",
    "type": "function"
  },
  "func:split_scenarios.py.name.lower": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.name.lower",
    "name": "name.lower",
    "path": "pending:name.lower",
    "type": "function"
  },
  "func:split_scenarios.py.open": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.open",
    "name": "open",
    "path": "pending:open",
    "type": "function"
  },
  "func:split_scenarios.py.os.makedirs": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.os.makedirs",
    "name": "os.makedirs",
    "path": "pending:os.makedirs",
    "type": "function"
  },
  "func:split_scenarios.py.print": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.print",
    "name": "print",
    "path": "pending:print",
    "type": "function"
  },
  "func:split_scenarios.py.replace": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.replace",
    "name": "replace",
    "path": "pending:replace",
    "type": "function"
  },
  "func:split_scenarios.py.sum": {
    "attributes": {
      "pending": true
    },
    "id": "func:split_scenarios.py.sum",
    "name": "sum",
    "path": "pending:sum",
    "type": "function"
  },
  "func:split_scenarios.py.write_scenario_files": {
    "attributes": {
      "args": [
        "categories",
        "output_dir"
      ],
      "async": false,
      "line": 83,
      "name": "write_scenario_files"
    },
    "id": "func:split_scenarios.py.write_scenario_files",
    "line": 83,
    "name": "write_scenario_files",
    "path": "split_scenarios.py",
    "type": "function"
  },
  "func:users/models.py.__str__": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 45,
      "name": "__str__"
    },
    "id": "func:users/models.py.__str__",
    "line": 45,
    "name": "__str__",
    "path": "users/models.py",
    "type": "function"
  },
  "func:users/serializers.py.create": {
    "attributes": {
      "args": [
        "self",
        "validated_data"
      ],
      "async": false,
      "line": 60,
      "name": "create"
    },
    "id": "func:users/serializers.py.create",
    "line": 60,
    "name": "create",
    "path": "users/serializers.py",
    "type": "function"
  },
  "func:users/serializers.py.delete": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.delete",
    "name": "delete",
    "path": "pending:delete",
    "type": "function"
  },
  "func:users/serializers.py.exclude": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.exclude",
    "name": "exclude",
    "path": "pending:exclude",
    "type": "function"
  },
  "func:users/serializers.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:users/serializers.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:users/serializers.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:users/serializers.py.hasattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.hasattr",
    "name": "hasattr",
    "path": "pending:hasattr",
    "type": "function"
  },
  "func:users/serializers.py.list": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.list",
    "name": "list",
    "path": "pending:list",
    "type": "function"
  },
  "func:users/serializers.py.preferences_data.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.preferences_data.items",
    "name": "preferences_data.items",
    "path": "pending:preferences_data.items",
    "type": "function"
  },
  "func:users/serializers.py.prefs.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.prefs.save",
    "name": "prefs.save",
    "path": "pending:prefs.save",
    "type": "function"
  },
  "func:users/serializers.py.select_related": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.select_related",
    "name": "select_related",
    "path": "pending:select_related",
    "type": "function"
  },
  "func:users/serializers.py.setattr": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.setattr",
    "name": "setattr",
    "path": "pending:setattr",
    "type": "function"
  },
  "func:users/serializers.py.spending_data.items": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.spending_data.items",
    "name": "spending_data.items",
    "path": "pending:spending_data.items",
    "type": "function"
  },
  "func:users/serializers.py.to_representation": {
    "attributes": {
      "args": [
        "self",
        "instance"
      ],
      "async": false,
      "line": 109,
      "name": "to_representation"
    },
    "id": "func:users/serializers.py.to_representation",
    "line": 109,
    "name": "to_representation",
    "path": "users/serializers.py",
    "type": "function"
  },
  "func:users/serializers.py.update_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.update_or_create",
    "name": "update_or_create",
    "path": "pending:update_or_create",
    "type": "function"
  },
  "func:users/serializers.py.validated_data.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.validated_data.get",
    "name": "validated_data.get",
    "path": "pending:validated_data.get",
    "type": "function"
  },
  "func:users/serializers.py.values_list": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/serializers.py.values_list",
    "name": "values_list",
    "path": "pending:values_list",
    "type": "function"
  },
  "func:users/views.py.Response": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.Response",
    "name": "Response",
    "path": "pending:Response",
    "type": "function"
  },
  "func:users/views.py.UserCardSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.UserCardSerializer",
    "name": "UserCardSerializer",
    "path": "pending:UserCardSerializer",
    "type": "function"
  },
  "func:users/views.py.UserDataSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.UserDataSerializer",
    "name": "UserDataSerializer",
    "path": "pending:UserDataSerializer",
    "type": "function"
  },
  "func:users/views.py.UserSerializer": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.UserSerializer",
    "name": "UserSerializer",
    "path": "pending:UserSerializer",
    "type": "function"
  },
  "func:users/views.py.api_view": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.api_view",
    "name": "api_view",
    "path": "pending:api_view",
    "type": "function"
  },
  "func:users/views.py.date": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.date",
    "name": "date",
    "path": "pending:date",
    "type": "function"
  },
  "func:users/views.py.filter": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.filter",
    "name": "filter",
    "path": "pending:filter",
    "type": "function"
  },
  "func:users/views.py.get": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.get",
    "name": "get",
    "path": "pending:get",
    "type": "function"
  },
  "func:users/views.py.get_object": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 65,
      "name": "get_object"
    },
    "id": "func:users/views.py.get_object",
    "line": 65,
    "name": "get_object",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.get_or_create": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.get_or_create",
    "name": "get_or_create",
    "path": "pending:get_or_create",
    "type": "function"
  },
  "func:users/views.py.get_queryset": {
    "attributes": {
      "args": [
        "self"
      ],
      "async": false,
      "line": 51,
      "name": "get_queryset"
    },
    "id": "func:users/views.py.get_queryset",
    "line": 51,
    "name": "get_queryset",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.get_user_cards_details": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 198,
      "name": "get_user_cards_details"
    },
    "id": "func:users/views.py.get_user_cards_details",
    "line": 198,
    "name": "get_user_cards_details",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.perform_create": {
    "attributes": {
      "args": [
        "self",
        "serializer"
      ],
      "async": false,
      "line": 55,
      "name": "perform_create"
    },
    "id": "func:users/views.py.perform_create",
    "line": 55,
    "name": "perform_create",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.permission_classes": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.permission_classes",
    "name": "permission_classes",
    "path": "pending:permission_classes",
    "type": "function"
  },
  "func:users/views.py.select_related": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.select_related",
    "name": "select_related",
    "path": "pending:select_related",
    "type": "function"
  },
  "func:users/views.py.serializer.create": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.serializer.create",
    "name": "serializer.create",
    "path": "pending:serializer.create",
    "type": "function"
  },
  "func:users/views.py.serializer.is_valid": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.serializer.is_valid",
    "name": "serializer.is_valid",
    "path": "pending:serializer.is_valid",
    "type": "function"
  },
  "func:users/views.py.serializer.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.serializer.save",
    "name": "serializer.save",
    "path": "pending:serializer.save",
    "type": "function"
  },
  "func:users/views.py.serializer.to_representation": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.serializer.to_representation",
    "name": "serializer.to_representation",
    "path": "pending:serializer.to_representation",
    "type": "function"
  },
  "func:users/views.py.str": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.str",
    "name": "str",
    "path": "pending:str",
    "type": "function"
  },
  "func:users/views.py.timezone.now": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.timezone.now",
    "name": "timezone.now",
    "path": "pending:timezone.now",
    "type": "function"
  },
  "func:users/views.py.toggle_user_card": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 88,
      "name": "toggle_user_card"
    },
    "id": "func:users/views.py.toggle_user_card",
    "line": 88,
    "name": "toggle_user_card",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.update": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.update",
    "name": "update",
    "path": "pending:update",
    "type": "function"
  },
  "func:users/views.py.update_user_card_details": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 145,
      "name": "update_user_card_details"
    },
    "id": "func:users/views.py.update_user_card_details",
    "line": 145,
    "name": "update_user_card_details",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.user_card.save": {
    "attributes": {
      "pending": true
    },
    "id": "func:users/views.py.user_card.save",
    "name": "user_card.save",
    "path": "pending:user_card.save",
    "type": "function"
  },
  "func:users/views.py.user_data_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 72,
      "name": "user_data_view"
    },
    "id": "func:users/views.py.user_data_view",
    "line": 72,
    "name": "user_data_view",
    "path": "users/views.py",
    "type": "function"
  },
  "func:users/views.py.user_status_view": {
    "attributes": {
      "args": [
        "request"
      ],
      "async": false,
      "line": 218,
      "name": "user_status_view"
    },
    "id": "func:users/views.py.user_status_view",
    "line": 218,
    "name": "user_status_view",
    "path": "users/views.py",
    "type": "function"
  }
}